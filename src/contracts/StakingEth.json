{
  "contractName": "StakingEth",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressToken",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor",
      "payable": true
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "depositAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountStake",
          "type": "uint256"
        }
      ],
      "name": "ethDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountdestake",
          "type": "uint256"
        }
      ],
      "name": "ethWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "rewardCalculed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "rewardWithdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isStaker",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "rewardCalculed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "myReward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockStake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "whithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestMyTokenPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getLatestEthPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "calculedReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "appelant",
          "type": "address"
        }
      ],
      "name": "getBalanceStack",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToken\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountStake\",\"type\":\"uint256\"}],\"name\":\"ethDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountdestake\",\"type\":\"uint256\"}],\"name\":\"ethWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"rewardCalculed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rewardWithdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"calculedReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"appelant\",\"type\":\"address\"}],\"name\":\"getBalanceStack\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestEthPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestMyTokenPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isStaker\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"rewardCalculed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"myReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockStake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"whithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Bloodyr\",\"kind\":\"dev\",\"methods\":{\"calculedReward()\":{\"details\":\"Calculate the amount of the reward compared to the eth, converted into my token\"},\"getLatestEthPrice()\":{\"details\":\"use the oracle chainlink to retrieve the value at time T of the eth\"},\"getLatestMyTokenPrice()\":{\"details\":\"use the oracle chainlink to retrieve the value at time T of the ethand set the value of my token with a ratio of / 1000\",\"returns\":{\"_0\":\"Price of my token \"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"viewReward()\":{\"returns\":{\"_0\":\"Return the accumulated reward word\"}},\"whithdraw(address)\":{\"details\":\"Require that the user structure be true, set an amount in relation to the balance,reassign the balance of the balance to 0,Return the eth to its owner, calculate the reward, send the reward, unify the user structure\"}},\"title\":\"Staking eth\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculedReward()\":{\"notice\":\"Calculate the amount of the reward\"},\"getLatestEthPrice()\":{\"notice\":\"return the value of my token\"},\"getLatestMyTokenPrice()\":{\"notice\":\"return the value of my token\"},\"whithdraw(address)\":{\"notice\":\"Withdraw Eth\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/StakingEth.sol\":\"StakingEth\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/StakingEth.sol\":{\"keccak256\":\"0x744f2ce14c11c653185afe490d9012254090a7bfc1c70ed739e181da54b58cfc\",\"urls\":[\"bzz-raw://a3efbf56f2881e197d0e66159b1f9224f9dc9e4b99a08721f9c635010bdb62af\",\"dweb:/ipfs/QmPonHfm4zw3WBmcWN2MGE5Jbe3dFCh6B9qbWGap5pDnH6\"]},\"project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf1a5f52ee72c20566bd22be8d5a980a07b0e1e6e210bc3544bf6575fdb8a897c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39acbed8d0dab2e55b9da2a6140360106d6e0bc525e3900f7dc9dba05bc84339\",\"dweb:/ipfs/QmPzyBFj6zxPiKTioLqGzZ1NtgBTXB8y4GoVUGSRQdTpgv\"]}},\"version\":1}",
  "bytecode": "0x6080604052601e60045560405162001cf438038062001cf483398181016040528101906200002e9190620001ce565b6200004e62000042620000eb60201b60201c565b620000f360201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739326bfa02add2366b30bacb125260af641031331600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000248565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001c8816200022e565b92915050565b600060208284031215620001e157600080fd5b6000620001f184828501620001b7565b91505092915050565b600062000207826200020e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200023981620001fa565b81146200024557600080fd5b50565b611a9c80620002586000396000f3fe6080604052600436106100a05760003560e01c80637c01f25c116100645780637c01f25c146103805780638ac04358146103bd5780638da5cb5b146103e65780639168ae7214610411578063b88a802f14610452578063f2fde38b14610469576102cc565b806325b0098d146102d157806330c0b9ec146102e857806334f2015d14610313578063715018a61461033e578063766613a214610355576102cc565b366102cc5760001515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615151461013b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013290611626565b60405180910390fd5b42600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461022f9190611692565b925050819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083151502179055507f7525d1faf5294223f8142421b1f6a8f34a58c688e5fa7768e327346bcf8132a833346040516102c292919061152f565b60405180910390a1005b600080fd5b3480156102dd57600080fd5b506102e6610492565b005b3480156102f457600080fd5b506102fd6106a7565b60405161030a91906115ab565b60405180910390f35b34801561031f57600080fd5b50610328610765565b6040516103359190611666565b60405180910390f35b34801561034a57600080fd5b506103536107af565b005b34801561036157600080fd5b5061036a610837565b60405161037791906115ab565b60405180910390f35b34801561038c57600080fd5b506103a760048036038101906103a291906111d6565b610908565b6040516103b49190611666565b60405180910390f35b3480156103c957600080fd5b506103e460048036038101906103df91906111ff565b610954565b005b3480156103f257600080fd5b506103fb610c13565b60405161040891906114eb565b60405180910390f35b34801561041d57600080fd5b50610438600480360381019061043391906111d6565b610c3c565b604051610449959493929190611558565b60405180910390f35b34801561045e57600080fd5b50610467610c8c565b005b34801561047557600080fd5b50610490600480360381019061048b91906111d6565b610f94565b005b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515146104f257600080fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015442610542919061189a565b90506000600454826105549190611752565b90506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490506000610bb8826105ad91906116e8565b9050600083826105bd9190611783565b905060006103e8826105cf9190611783565b905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083151502179055507f44115789f6f29b85f052843cc05ab8834d9ade0d2f729153e69841fe80411dc260405160405180910390a1505050505050565b600080600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561071857600080fd5b505afa15801561072c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107509190611251565b94509450945094509450839550505050505090565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154905090565b6107b761108c565b73ffffffffffffffffffffffffffffffffffffffff166107d5610c13565b73ffffffffffffffffffffffffffffffffffffffff161461082b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082290611646565b60405180910390fd5b6108356000611094565b565b600080600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108a857600080fd5b505afa1580156108bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e09190611251565b9450945094509450945060006103e8856108fa91906116e8565b905080965050505050505090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515146109ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e190611606565b60405180910390fd5b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16151514610a4a57600080fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610ad7573d6000803e3d6000fd5b506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083151502179055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507fcb1d3afd61659c02e4f7de0508119d691503e7e57b3908f10756f68d1407233b8282604051610c07929190611506565b60405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16908060010154908060020154908060030154905085565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201541415610d12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d09906115c6565b60405180910390fd5b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16151514610d7257600080fd5b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16151514610dd257600080fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610e7692919061152f565b602060405180830381600087803b158015610e9057600080fd5b505af1158015610ea4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec89190611228565b507f18e31e7ff18e2ebe3fcc65261b55b8bcfc905baa8757376de65b6a4dd1a0671a3382604051610efa92919061152f565b60405180910390a16000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555050565b610f9c61108c565b73ffffffffffffffffffffffffffffffffffffffff16610fba610c13565b73ffffffffffffffffffffffffffffffffffffffff1614611010576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100790611646565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611080576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611077906115e6565b60405180910390fd5b61108981611094565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050611167816119dc565b92915050565b60008135905061117c816119f3565b92915050565b60008151905061119181611a0a565b92915050565b6000815190506111a681611a21565b92915050565b6000815190506111bb81611a38565b92915050565b6000815190506111d081611a4f565b92915050565b6000602082840312156111e857600080fd5b60006111f684828501611158565b91505092915050565b60006020828403121561121157600080fd5b600061121f8482850161116d565b91505092915050565b60006020828403121561123a57600080fd5b600061124884828501611182565b91505092915050565b600080600080600060a0868803121561126957600080fd5b6000611277888289016111c1565b955050602061128888828901611197565b9450506040611299888289016111ac565b93505060606112aa888289016111ac565b92505060806112bb888289016111c1565b9150509295509295909350565b6112d181611948565b82525050565b6112e0816118ce565b82525050565b6112ef816118f2565b82525050565b6112fe816118fe565b82525050565b6000611311603583611681565b91507f566f7573206e276176657a20706173206465207265636f6d70656e736520706f60008301527f7572206361205374616b652064657320746f6b656e00000000000000000000006020830152604082019050919050565b6000611377602683611681565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006113dd603783611681565b91507f566f7573206465766169732061766f6972205374616b6572206465732045746860008301527f20706f757220706f75766f6972207768697468647261770000000000000000006020830152604082019050919050565b6000611443603f83611681565b91507f566f7573206e6520646576616973207061732061766f69722064656a6120737460008301527f61636b6572206465732065746820706f757220706f757220737461636b6572006020830152604082019050919050565b60006114a9602083611681565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6114e581611928565b82525050565b600060208201905061150060008301846112d7565b92915050565b600060408201905061151b60008301856112c8565b61152860208301846114dc565b9392505050565b600060408201905061154460008301856112d7565b61155160208301846114dc565b9392505050565b600060a08201905061156d60008301886112e6565b61157a60208301876112e6565b61158760408301866114dc565b61159460608301856114dc565b6115a160808301846114dc565b9695505050505050565b60006020820190506115c060008301846112f5565b92915050565b600060208201905081810360008301526115df81611304565b9050919050565b600060208201905081810360008301526115ff8161136a565b9050919050565b6000602082019050818103600083015261161f816113d0565b9050919050565b6000602082019050818103600083015261163f81611436565b9050919050565b6000602082019050818103600083015261165f8161149c565b9050919050565b600060208201905061167b60008301846114dc565b92915050565b600082825260208201905092915050565b600061169d82611928565b91506116a883611928565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116dd576116dc61197e565b5b828201905092915050565b60006116f3826118fe565b91506116fe836118fe565b92508261170e5761170d6119ad565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156117475761174661197e565b5b828205905092915050565b600061175d82611928565b915061176883611928565b925082611778576117776119ad565b5b828204905092915050565b600061178e826118fe565b9150611799836118fe565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156117d8576117d761197e565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156118155761181461197e565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156118525761185161197e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561188f5761188e61197e565b5b828202905092915050565b60006118a582611928565b91506118b083611928565b9250828210156118c3576118c261197e565b5b828203905092915050565b60006118d982611908565b9050919050565b60006118eb82611908565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b60006119538261195a565b9050919050565b60006119658261196c565b9050919050565b600061197782611908565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6119e5816118ce565b81146119f057600080fd5b50565b6119fc816118e0565b8114611a0757600080fd5b50565b611a13816118f2565b8114611a1e57600080fd5b50565b611a2a816118fe565b8114611a3557600080fd5b50565b611a4181611928565b8114611a4c57600080fd5b50565b611a5881611932565b8114611a6357600080fd5b5056fea2646970667358221220fcb24c04cb6a0432c4ea7cf908d47b8768eb4cfca4b78e80d5965f50b74fda8a64736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100a05760003560e01c80637c01f25c116100645780637c01f25c146103805780638ac04358146103bd5780638da5cb5b146103e65780639168ae7214610411578063b88a802f14610452578063f2fde38b14610469576102cc565b806325b0098d146102d157806330c0b9ec146102e857806334f2015d14610313578063715018a61461033e578063766613a214610355576102cc565b366102cc5760001515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615151461013b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013290611626565b60405180910390fd5b42600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461022f9190611692565b925050819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083151502179055507f7525d1faf5294223f8142421b1f6a8f34a58c688e5fa7768e327346bcf8132a833346040516102c292919061152f565b60405180910390a1005b600080fd5b3480156102dd57600080fd5b506102e6610492565b005b3480156102f457600080fd5b506102fd6106a7565b60405161030a91906115ab565b60405180910390f35b34801561031f57600080fd5b50610328610765565b6040516103359190611666565b60405180910390f35b34801561034a57600080fd5b506103536107af565b005b34801561036157600080fd5b5061036a610837565b60405161037791906115ab565b60405180910390f35b34801561038c57600080fd5b506103a760048036038101906103a291906111d6565b610908565b6040516103b49190611666565b60405180910390f35b3480156103c957600080fd5b506103e460048036038101906103df91906111ff565b610954565b005b3480156103f257600080fd5b506103fb610c13565b60405161040891906114eb565b60405180910390f35b34801561041d57600080fd5b50610438600480360381019061043391906111d6565b610c3c565b604051610449959493929190611558565b60405180910390f35b34801561045e57600080fd5b50610467610c8c565b005b34801561047557600080fd5b50610490600480360381019061048b91906111d6565b610f94565b005b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515146104f257600080fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015442610542919061189a565b90506000600454826105549190611752565b90506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490506000610bb8826105ad91906116e8565b9050600083826105bd9190611783565b905060006103e8826105cf9190611783565b905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083151502179055507f44115789f6f29b85f052843cc05ab8834d9ade0d2f729153e69841fe80411dc260405160405180910390a1505050505050565b600080600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561071857600080fd5b505afa15801561072c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107509190611251565b94509450945094509450839550505050505090565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154905090565b6107b761108c565b73ffffffffffffffffffffffffffffffffffffffff166107d5610c13565b73ffffffffffffffffffffffffffffffffffffffff161461082b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082290611646565b60405180910390fd5b6108356000611094565b565b600080600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108a857600080fd5b505afa1580156108bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e09190611251565b9450945094509450945060006103e8856108fa91906116e8565b905080965050505050505090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515146109ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e190611606565b60405180910390fd5b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16151514610a4a57600080fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610ad7573d6000803e3d6000fd5b506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083151502179055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507fcb1d3afd61659c02e4f7de0508119d691503e7e57b3908f10756f68d1407233b8282604051610c07929190611506565b60405180910390a15050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900460ff16908060010154908060020154908060030154905085565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201541415610d12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d09906115c6565b60405180910390fd5b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16151514610d7257600080fd5b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16151514610dd257600080fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610e7692919061152f565b602060405180830381600087803b158015610e9057600080fd5b505af1158015610ea4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec89190611228565b507f18e31e7ff18e2ebe3fcc65261b55b8bcfc905baa8757376de65b6a4dd1a0671a3382604051610efa92919061152f565b60405180910390a16000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555050565b610f9c61108c565b73ffffffffffffffffffffffffffffffffffffffff16610fba610c13565b73ffffffffffffffffffffffffffffffffffffffff1614611010576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100790611646565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611080576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611077906115e6565b60405180910390fd5b61108981611094565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050611167816119dc565b92915050565b60008135905061117c816119f3565b92915050565b60008151905061119181611a0a565b92915050565b6000815190506111a681611a21565b92915050565b6000815190506111bb81611a38565b92915050565b6000815190506111d081611a4f565b92915050565b6000602082840312156111e857600080fd5b60006111f684828501611158565b91505092915050565b60006020828403121561121157600080fd5b600061121f8482850161116d565b91505092915050565b60006020828403121561123a57600080fd5b600061124884828501611182565b91505092915050565b600080600080600060a0868803121561126957600080fd5b6000611277888289016111c1565b955050602061128888828901611197565b9450506040611299888289016111ac565b93505060606112aa888289016111ac565b92505060806112bb888289016111c1565b9150509295509295909350565b6112d181611948565b82525050565b6112e0816118ce565b82525050565b6112ef816118f2565b82525050565b6112fe816118fe565b82525050565b6000611311603583611681565b91507f566f7573206e276176657a20706173206465207265636f6d70656e736520706f60008301527f7572206361205374616b652064657320746f6b656e00000000000000000000006020830152604082019050919050565b6000611377602683611681565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006113dd603783611681565b91507f566f7573206465766169732061766f6972205374616b6572206465732045746860008301527f20706f757220706f75766f6972207768697468647261770000000000000000006020830152604082019050919050565b6000611443603f83611681565b91507f566f7573206e6520646576616973207061732061766f69722064656a6120737460008301527f61636b6572206465732065746820706f757220706f757220737461636b6572006020830152604082019050919050565b60006114a9602083611681565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6114e581611928565b82525050565b600060208201905061150060008301846112d7565b92915050565b600060408201905061151b60008301856112c8565b61152860208301846114dc565b9392505050565b600060408201905061154460008301856112d7565b61155160208301846114dc565b9392505050565b600060a08201905061156d60008301886112e6565b61157a60208301876112e6565b61158760408301866114dc565b61159460608301856114dc565b6115a160808301846114dc565b9695505050505050565b60006020820190506115c060008301846112f5565b92915050565b600060208201905081810360008301526115df81611304565b9050919050565b600060208201905081810360008301526115ff8161136a565b9050919050565b6000602082019050818103600083015261161f816113d0565b9050919050565b6000602082019050818103600083015261163f81611436565b9050919050565b6000602082019050818103600083015261165f8161149c565b9050919050565b600060208201905061167b60008301846114dc565b92915050565b600082825260208201905092915050565b600061169d82611928565b91506116a883611928565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116dd576116dc61197e565b5b828201905092915050565b60006116f3826118fe565b91506116fe836118fe565b92508261170e5761170d6119ad565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156117475761174661197e565b5b828205905092915050565b600061175d82611928565b915061176883611928565b925082611778576117776119ad565b5b828204905092915050565b600061178e826118fe565b9150611799836118fe565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156117d8576117d761197e565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156118155761181461197e565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156118525761185161197e565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561188f5761188e61197e565b5b828202905092915050565b60006118a582611928565b91506118b083611928565b9250828210156118c3576118c261197e565b5b828203905092915050565b60006118d982611908565b9050919050565b60006118eb82611908565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b60006119538261195a565b9050919050565b60006119658261196c565b9050919050565b600061197782611908565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6119e5816118ce565b81146119f057600080fd5b50565b6119fc816118e0565b8114611a0757600080fd5b50565b611a13816118f2565b8114611a1e57600080fd5b50565b611a2a816118fe565b8114611a3557600080fd5b50565b611a4181611928565b8114611a4c57600080fd5b50565b611a5881611932565b8114611a6357600080fd5b5056fea2646970667358221220fcb24c04cb6a0432c4ea7cf908d47b8768eb4cfca4b78e80d5965f50b74fda8a64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:805:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:10",
                "type": ""
              }
            ],
            "src": "7:143:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:207:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "243:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "305:128:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "320:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "324:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "349:74:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "395:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "406:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "391:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "391:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "415:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "359:31:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "359:64:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "349:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:10",
                "type": ""
              }
            ],
            "src": "156:284:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "491:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "501:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "530:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "512:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "512:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "501:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "483:7:10",
                "type": ""
              }
            ],
            "src": "446:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "593:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "603:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "618:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "625:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "614:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "603:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "575:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "585:7:10",
                "type": ""
              }
            ],
            "src": "548:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "723:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "780:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "789:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "792:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "782:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "782:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "782:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "746:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "771:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "753:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "753:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "743:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "743:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "736:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "736:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "733:2:10"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "716:5:10",
                "type": ""
              }
            ],
            "src": "680:122:10"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13834:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:10",
                "type": ""
              }
            ],
            "src": "7:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:95:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "244:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "231:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "295:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "260:34:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:41:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "260:41:10"
                }
              ]
            },
            "name": "abi_decode_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:10",
                "type": ""
              }
            ],
            "src": "152:155:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "373:77:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "383:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "398:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "392:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "392:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "383:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "438:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "414:23:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "414:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "414:30:10"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "351:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "359:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "367:5:10",
                "type": ""
              }
            ],
            "src": "313:137:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "518:79:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "528:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "543:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "537:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "537:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "528:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "585:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "559:25:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "559:32:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "559:32:10"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "496:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "504:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "512:5:10",
                "type": ""
              }
            ],
            "src": "456:141:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "666:80:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "676:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "691:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "685:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "685:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "676:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "734:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "707:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "707:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "707:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "644:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "652:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "660:5:10",
                "type": ""
              }
            ],
            "src": "603:143:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "814:79:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "824:22:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "839:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "833:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "833:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "824:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "881:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint80",
                      "nodeType": "YulIdentifier",
                      "src": "855:25:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "855:32:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "855:32:10"
                }
              ]
            },
            "name": "abi_decode_t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "792:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "800:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "808:5:10",
                "type": ""
              }
            ],
            "src": "752:141:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "965:196:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1011:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1020:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1023:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1013:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1013:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1013:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "986:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "995:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "982:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "982:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1007:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "978:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "978:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "975:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1037:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1052:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1066:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1056:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1081:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1116:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1127:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1112:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1112:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1136:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1091:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1091:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1081:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "935:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "946:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "958:6:10",
                "type": ""
              }
            ],
            "src": "899:262:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1241:204:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1287:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1296:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1299:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1289:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1289:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1289:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1262:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1271:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1258:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1258:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1283:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1254:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1254:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1251:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1313:125:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1328:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1342:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1332:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1357:71:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1400:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1411:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1396:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1396:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1420:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "1367:28:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1367:61:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1357:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1211:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1222:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1234:6:10",
                "type": ""
              }
            ],
            "src": "1167:278:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1525:204:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1571:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1580:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1583:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1573:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1573:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1573:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1546:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1555:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1542:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1542:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1567:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1538:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1538:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1535:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1597:125:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1612:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1626:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1616:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1641:71:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1684:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1695:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1680:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1680:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1704:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1651:28:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1651:61:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1641:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1495:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1506:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1518:6:10",
                "type": ""
              }
            ],
            "src": "1451:278:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1877:762:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1924:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1933:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1936:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1926:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1926:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1926:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1898:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1907:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1894:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1894:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1919:3:10",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1890:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1890:33:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1887:2:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1950:127:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1965:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1979:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1969:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1994:73:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2039:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2050:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2035:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2035:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2059:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2004:30:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2004:63:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1994:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2087:128:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2102:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2116:2:10",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2106:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2132:73:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2177:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2188:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2173:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2173:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2197:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2142:30:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2142:63:10"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2132:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2225:129:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2240:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2254:2:10",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2244:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2270:74:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2316:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2327:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2312:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2312:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2336:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2280:31:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2280:64:10"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2270:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2364:129:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2379:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2393:2:10",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2383:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2409:74:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2455:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2466:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2451:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2451:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2475:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2419:31:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2419:64:10"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "2409:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2503:129:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2518:17:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2532:3:10",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2522:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2549:73:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2594:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2605:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2590:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2590:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2614:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint80_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2559:30:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2559:63:10"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "2549:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1815:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1826:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1838:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1846:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1854:6:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1862:6:10",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1870:6:10",
                "type": ""
              }
            ],
            "src": "1735:904:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2718:74:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2735:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2779:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_address_payable_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2740:38:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2740:45:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2728:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2728:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2728:58:10"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2706:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2713:3:10",
                "type": ""
              }
            ],
            "src": "2645:147:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2863:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2880:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2903:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2885:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2885:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2873:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2873:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2873:37:10"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2851:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2858:3:10",
                "type": ""
              }
            ],
            "src": "2798:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2981:50:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2998:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3018:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3003:14:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3003:21:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2991:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2991:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2991:34:10"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2969:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2976:3:10",
                "type": ""
              }
            ],
            "src": "2922:109:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3100:52:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3117:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3139:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "3122:16:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3122:23:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3110:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3110:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3110:36:10"
                }
              ]
            },
            "name": "abi_encode_t_int256_to_t_int256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3088:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3095:3:10",
                "type": ""
              }
            ],
            "src": "3037:115:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3304:239:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3314:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3380:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3385:2:10",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3321:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3321:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3314:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3409:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3414:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3405:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3405:11:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3418:34:10",
                        "type": "",
                        "value": "Vous n'avez pas de recompense po"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3398:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3398:55:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3398:55:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3474:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3479:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3470:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3470:12:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3484:23:10",
                        "type": "",
                        "value": "ur ca Stake des token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3463:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3463:45:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3463:45:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3518:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3529:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3534:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3525:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3525:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3518:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1ec2810fdba070204c3f67c52cf6c3ef167305facd7fb0eef150793ffb5e9ce5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3292:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3300:3:10",
                "type": ""
              }
            ],
            "src": "3158:385:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3695:224:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3705:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3771:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3776:2:10",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3712:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3712:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3705:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3800:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3805:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3796:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3796:11:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3809:34:10",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3789:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3789:55:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3789:55:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3865:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3870:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3861:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3861:12:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3875:8:10",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3854:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3854:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3854:30:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3894:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3905:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3910:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3901:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3901:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3894:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3683:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3691:3:10",
                "type": ""
              }
            ],
            "src": "3549:370:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4071:241:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4081:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4147:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4152:2:10",
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4088:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4088:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4081:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4176:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4181:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4172:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4172:11:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4185:34:10",
                        "type": "",
                        "value": "Vous devais avoir Staker des Eth"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4165:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4165:55:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4165:55:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4241:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4246:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4237:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4237:12:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4251:25:10",
                        "type": "",
                        "value": " pour pouvoir whithdraw"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4230:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4230:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4230:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4287:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4298:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4303:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4294:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4294:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4287:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_28416cfb3819639ed92e581fc09859f2278a82c2070510dad51a1c8c74f06752_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4059:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4067:3:10",
                "type": ""
              }
            ],
            "src": "3925:387:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4464:249:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4474:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4540:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4545:2:10",
                        "type": "",
                        "value": "63"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4481:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4481:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4474:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4569:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4574:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4565:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4565:11:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4578:34:10",
                        "type": "",
                        "value": "Vous ne devais pas avoir deja st"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4558:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4558:55:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4558:55:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4634:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4639:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4630:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4630:12:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4644:33:10",
                        "type": "",
                        "value": "acker des eth pour pour stacker"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4623:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4623:55:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4623:55:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4688:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4699:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4704:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4695:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4695:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4688:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6baf025501f0c4272111836abec5c956579f667d3ef74a22615fdcdb4b161834_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4452:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4460:3:10",
                "type": ""
              }
            ],
            "src": "4318:395:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4865:184:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4875:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4941:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4946:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4882:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4882:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4875:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4970:3:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4975:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4966:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4966:11:10"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4979:34:10",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4959:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4959:55:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4959:55:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5024:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5035:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5040:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5031:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5031:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5024:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4853:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4861:3:10",
                "type": ""
              }
            ],
            "src": "4719:330:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5120:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5137:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5160:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5142:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5142:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5130:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5130:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5130:37:10"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5108:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5115:3:10",
                "type": ""
              }
            ],
            "src": "5055:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5277:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5287:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5299:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5310:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5295:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5295:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5287:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5367:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5380:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5391:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5376:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5376:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5323:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5323:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5323:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5249:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5261:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5272:4:10",
                "type": ""
              }
            ],
            "src": "5179:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5541:214:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5551:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5563:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5574:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5559:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5559:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5551:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5639:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5652:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5663:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5648:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5648:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5587:51:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5587:79:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5587:79:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5720:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5733:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5744:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5729:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5729:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5676:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5676:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5676:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5505:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5517:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5525:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5536:4:10",
                "type": ""
              }
            ],
            "src": "5407:348:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5887:206:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5897:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5909:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5920:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5905:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5905:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5897:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5977:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5990:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6001:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5986:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5986:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5933:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5933:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5933:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6058:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6071:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6082:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6067:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6067:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6014:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6014:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6014:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5851:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5863:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5871:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5882:4:10",
                "type": ""
              }
            ],
            "src": "5761:332:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6297:442:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6307:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6319:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6330:3:10",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6315:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6315:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6307:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6382:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6395:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6406:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6391:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6391:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6344:37:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6344:65:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6344:65:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6457:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6470:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6481:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6466:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6466:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6419:37:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6419:66:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6419:66:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6539:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6552:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6563:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6548:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6548:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6495:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6495:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6495:72:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6621:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6634:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6645:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6630:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6630:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6577:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6577:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6577:72:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "6703:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6716:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6727:3:10",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6712:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6712:19:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6659:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6659:73:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6659:73:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_bool_t_uint256_t_uint256_t_uint256__to_t_bool_t_bool_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6237:9:10",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6249:6:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6257:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6265:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6273:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6281:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6292:4:10",
                "type": ""
              }
            ],
            "src": "6099:640:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6841:122:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6851:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6863:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6874:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6859:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6859:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6851:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6929:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6942:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6953:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6938:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6938:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_int256_to_t_int256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6887:41:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6887:69:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6887:69:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6813:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6825:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6836:4:10",
                "type": ""
              }
            ],
            "src": "6745:218:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7140:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7150:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7162:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7173:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7158:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7158:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7150:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7197:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7208:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7193:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7193:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7216:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7222:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7212:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7212:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7186:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7186:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7186:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7242:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7376:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1ec2810fdba070204c3f67c52cf6c3ef167305facd7fb0eef150793ffb5e9ce5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7250:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7250:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7242:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1ec2810fdba070204c3f67c52cf6c3ef167305facd7fb0eef150793ffb5e9ce5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7120:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7135:4:10",
                "type": ""
              }
            ],
            "src": "6969:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7565:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7575:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7587:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7598:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7583:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7583:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7575:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7622:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7633:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7618:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7618:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7641:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7647:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7637:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7637:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7611:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7611:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7611:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7667:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7801:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7675:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7675:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7667:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7545:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7560:4:10",
                "type": ""
              }
            ],
            "src": "7394:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7990:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8000:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8012:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8023:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8008:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8008:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8000:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8047:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8058:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8043:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8043:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8066:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8072:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8062:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8062:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8036:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8036:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8036:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8092:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8226:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_28416cfb3819639ed92e581fc09859f2278a82c2070510dad51a1c8c74f06752_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8100:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8100:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8092:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_28416cfb3819639ed92e581fc09859f2278a82c2070510dad51a1c8c74f06752__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7970:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7985:4:10",
                "type": ""
              }
            ],
            "src": "7819:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8415:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8425:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8437:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8448:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8433:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8433:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8425:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8472:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8483:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8468:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8468:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8491:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8497:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8487:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8487:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8461:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8461:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8461:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8517:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8651:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6baf025501f0c4272111836abec5c956579f667d3ef74a22615fdcdb4b161834_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8525:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8525:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8517:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6baf025501f0c4272111836abec5c956579f667d3ef74a22615fdcdb4b161834__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8395:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8410:4:10",
                "type": ""
              }
            ],
            "src": "8244:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8840:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8850:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8862:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8873:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8858:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8858:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8850:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8897:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8908:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8893:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8893:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8916:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8922:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8912:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8912:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8886:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8886:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8886:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8942:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9076:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8950:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8950:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8942:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8820:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8835:4:10",
                "type": ""
              }
            ],
            "src": "8669:419:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9192:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9202:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9214:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9225:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9210:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9210:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9202:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9282:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9295:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9306:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9291:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9291:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9238:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9238:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9238:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9164:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9176:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9187:4:10",
                "type": ""
              }
            ],
            "src": "9094:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9418:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9435:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9440:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9428:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9428:19:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9428:19:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9456:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9475:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9480:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9471:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9471:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "9456:11:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9390:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9395:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "9406:11:10",
                "type": ""
              }
            ],
            "src": "9322:169:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9541:261:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9551:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9574:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9556:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9556:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9551:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9585:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9608:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9590:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9590:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9585:1:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9748:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9750:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9750:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9750:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9669:1:10"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9676:66:10",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9744:1:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9672:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9672:74:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9666:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9666:81:10"
                  },
                  "nodeType": "YulIf",
                  "src": "9663:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9780:16:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9791:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9794:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9787:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9787:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "9780:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9528:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9531:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "9537:3:10",
                "type": ""
              }
            ],
            "src": "9497:305:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9849:344:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9859:24:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9881:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "9864:16:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9864:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9859:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9892:24:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9914:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "9897:16:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9897:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9892:1:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9938:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "9940:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9940:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9940:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9935:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9928:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9928:9:10"
                  },
                  "nodeType": "YulIf",
                  "src": "9925:2:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10140:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10142:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10142:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10142:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "10029:1:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10032:66:10",
                            "type": "",
                            "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10026:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10026:73:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10116:1:10"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10123:1:10",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10126:1:10",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "10119:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10119:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10113:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10113:16:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10009:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10009:130:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10006:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10172:15:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10182:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10185:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "sdiv",
                      "nodeType": "YulIdentifier",
                      "src": "10177:4:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10177:10:10"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "10172:1:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9838:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9841:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "9847:1:10",
                "type": ""
              }
            ],
            "src": "9808:385:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10241:143:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10251:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10274:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10256:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10256:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10251:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10285:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10308:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10290:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10290:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10285:1:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10332:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "10334:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10334:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10334:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10329:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10322:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10322:9:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10319:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10364:14:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10373:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10376:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "10369:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10369:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "10364:1:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10230:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10233:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "10239:1:10",
                "type": ""
              }
            ],
            "src": "10199:185:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10437:944:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10447:24:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10469:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "10452:16:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10452:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10447:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10480:24:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10502:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "10485:16:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10485:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10480:1:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10691:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10693:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10693:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10693:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10589:1:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10592:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "sgt",
                              "nodeType": "YulIdentifier",
                              "src": "10585:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10585:9:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "10600:1:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10603:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "sgt",
                              "nodeType": "YulIdentifier",
                              "src": "10596:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10596:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10581:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10581:25:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "10611:1:10"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10618:66:10",
                                "type": "",
                                "value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "10686:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "10614:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10614:74:10"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10608:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10608:81:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10577:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10577:113:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10574:2:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10902:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10904:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10904:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10904:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10798:1:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10801:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "sgt",
                              "nodeType": "YulIdentifier",
                              "src": "10794:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10794:9:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "10809:1:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10812:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "10805:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10805:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10790:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10790:25:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10821:1:10"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10829:66:10",
                                "type": "",
                                "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10897:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "sdiv",
                              "nodeType": "YulIdentifier",
                              "src": "10824:4:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10824:75:10"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "10817:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10817:83:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10786:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10786:115:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10783:2:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11113:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11115:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11115:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11115:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11009:1:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11012:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "11005:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11005:9:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "11020:1:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11023:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "sgt",
                              "nodeType": "YulIdentifier",
                              "src": "11016:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11016:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11001:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11001:25:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "11032:1:10"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11040:66:10",
                                "type": "",
                                "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "11108:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "sdiv",
                              "nodeType": "YulIdentifier",
                              "src": "11035:4:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11035:75:10"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "11028:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11028:83:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10997:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10997:115:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10994:2:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11323:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11325:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11325:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11325:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11219:1:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11222:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "11215:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11215:9:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "11230:1:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11233:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "11226:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11226:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11211:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11211:25:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "11242:1:10"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11250:66:10",
                                "type": "",
                                "value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "11318:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "sdiv",
                              "nodeType": "YulIdentifier",
                              "src": "11245:4:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11245:75:10"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "11238:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11238:83:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11207:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11207:115:10"
                  },
                  "nodeType": "YulIf",
                  "src": "11204:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11355:20:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11370:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11373:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "11366:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11366:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "11355:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10420:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10423:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "10429:7:10",
                "type": ""
              }
            ],
            "src": "10390:991:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11432:146:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11442:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11465:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11447:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11447:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11442:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11476:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11499:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11481:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11481:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11476:1:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11523:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11525:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11525:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11525:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11517:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11520:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11514:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11514:8:10"
                  },
                  "nodeType": "YulIf",
                  "src": "11511:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11555:17:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11567:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11570:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11563:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11563:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "11555:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11418:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11421:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "11427:4:10",
                "type": ""
              }
            ],
            "src": "11387:191:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11629:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11639:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11668:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "11650:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11650:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11639:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11611:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11621:7:10",
                "type": ""
              }
            ],
            "src": "11584:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11739:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11749:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11778:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "11760:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11760:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11749:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11721:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11731:7:10",
                "type": ""
              }
            ],
            "src": "11686:104:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11838:48:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11848:32:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11873:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "11866:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11866:13:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11859:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11859:21:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11848:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11820:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11830:7:10",
                "type": ""
              }
            ],
            "src": "11796:90:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11936:32:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11946:16:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11957:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11946:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11918:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11928:7:10",
                "type": ""
              }
            ],
            "src": "11892:76:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12019:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12029:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12044:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12051:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12040:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12040:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12029:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12001:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12011:7:10",
                "type": ""
              }
            ],
            "src": "11974:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12151:32:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12161:16:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12172:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12161:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12133:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12143:7:10",
                "type": ""
              }
            ],
            "src": "12106:77:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12233:61:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12243:45:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12258:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12265:22:10",
                        "type": "",
                        "value": "0xffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12254:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12254:34:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "12243:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12215:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "12225:7:10",
                "type": ""
              }
            ],
            "src": "12189:105:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12368:66:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12378:50:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12422:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "12391:30:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12391:37:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12378:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_address_payable_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12348:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12358:9:10",
                "type": ""
              }
            ],
            "src": "12300:134:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12500:66:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12510:50:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12554:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12523:30:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12523:37:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12510:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12480:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12490:9:10",
                "type": ""
              }
            ],
            "src": "12440:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12632:53:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12642:37:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12673:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "12655:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12655:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "12642:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12612:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "12622:9:10",
                "type": ""
              }
            ],
            "src": "12572:113:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12719:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12736:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12739:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12729:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12729:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12729:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12833:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12836:4:10",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12826:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12826:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12826:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12857:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12860:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12850:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12850:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12850:15:10"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "12691:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12905:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12922:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12925:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12915:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12915:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12915:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13019:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13022:4:10",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13012:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13012:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13012:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13043:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13046:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13036:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13036:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13036:15:10"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "12877:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13106:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13163:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13172:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13175:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13165:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13165:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13165:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13129:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13154:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "13136:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13136:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "13126:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13126:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13119:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13119:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "13116:2:10"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13099:5:10",
                "type": ""
              }
            ],
            "src": "13063:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13242:87:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13307:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13316:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13319:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13309:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13309:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13309:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13265:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13298:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "13272:25:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13272:32:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "13262:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13262:43:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13255:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13255:51:10"
                  },
                  "nodeType": "YulIf",
                  "src": "13252:2:10"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13235:5:10",
                "type": ""
              }
            ],
            "src": "13191:138:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13375:76:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13429:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13438:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13441:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13431:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13431:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13431:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13398:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13420:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "13405:14:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13405:21:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "13395:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13395:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13388:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13388:40:10"
                  },
                  "nodeType": "YulIf",
                  "src": "13385:2:10"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13368:5:10",
                "type": ""
              }
            ],
            "src": "13335:116:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13499:78:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13555:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13564:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13567:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13557:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13557:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13557:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13522:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13546:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "13529:16:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13529:23:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "13519:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13519:34:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13512:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13512:42:10"
                  },
                  "nodeType": "YulIf",
                  "src": "13509:2:10"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13492:5:10",
                "type": ""
              }
            ],
            "src": "13457:120:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13626:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13683:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13692:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13695:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13685:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13685:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13685:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13649:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13674:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "13656:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13656:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "13646:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13646:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13639:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13639:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "13636:2:10"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13619:5:10",
                "type": ""
              }
            ],
            "src": "13583:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13753:78:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13809:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13818:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13821:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13811:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13811:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13811:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13776:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "13800:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint80",
                              "nodeType": "YulIdentifier",
                              "src": "13783:16:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13783:23:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "13773:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13773:34:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13766:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13766:42:10"
                  },
                  "nodeType": "YulIf",
                  "src": "13763:2:10"
                }
              ]
            },
            "name": "validator_revert_t_uint80",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13746:5:10",
                "type": ""
              }
            ],
            "src": "13711:120:10"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_stringliteral_1ec2810fdba070204c3f67c52cf6c3ef167305facd7fb0eef150793ffb5e9ce5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n\n        mstore(add(pos, 0), \"Vous n'avez pas de recompense po\")\n\n        mstore(add(pos, 32), \"ur ca Stake des token\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_28416cfb3819639ed92e581fc09859f2278a82c2070510dad51a1c8c74f06752_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n\n        mstore(add(pos, 0), \"Vous devais avoir Staker des Eth\")\n\n        mstore(add(pos, 32), \" pour pouvoir whithdraw\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6baf025501f0c4272111836abec5c956579f667d3ef74a22615fdcdb4b161834_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 63)\n\n        mstore(add(pos, 0), \"Vous ne devais pas avoir deja st\")\n\n        mstore(add(pos, 32), \"acker des eth pour pour stacker\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bool_t_uint256_t_uint256_t_uint256__to_t_bool_t_bool_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ec2810fdba070204c3f67c52cf6c3ef167305facd7fb0eef150793ffb5e9ce5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ec2810fdba070204c3f67c52cf6c3ef167305facd7fb0eef150793ffb5e9ce5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_28416cfb3819639ed92e581fc09859f2278a82c2070510dad51a1c8c74f06752__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_28416cfb3819639ed92e581fc09859f2278a82c2070510dad51a1c8c74f06752_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6baf025501f0c4272111836abec5c956579f667d3ef74a22615fdcdb4b161834__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6baf025501f0c4272111836abec5c956579f667d3ef74a22615fdcdb4b161834_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // overflow, if x > 0, y > 0 and x > (maxValue / y)\n        if and(and(sgt(x, 0), sgt(y, 0)), gt(x, div(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n        // underflow, if x > 0, y < 0 and y < (minValue / x)\n        if and(and(sgt(x, 0), slt(y, 0)), slt(y, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, x))) { panic_error_0x11() }\n        // underflow, if x < 0, y > 0 and x < (minValue / y)\n        if and(and(slt(x, 0), sgt(y, 0)), slt(x, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, y))) { panic_error_0x11() }\n        // overflow, if x < 0, y < 0 and x < (maxValue / y)\n        if and(and(slt(x, 0), slt(y, 0)), slt(x, sdiv(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "324:4947:2:-:0;;;983:2;955:30;;1009:205;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:4;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1090:12:2;1073:7;;:30;;;;;;;;;;;;;;;;;;1151:42;1114:12;;:80;;;;;;;;;;;;;;;;;;1009:205;324:4947;;656:98:9;709:7;736:10;729:17;;656:98;:::o;2270:187:4:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;7:143:10:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;324:4947:2:-;;;;;;;",
  "deployedSourceMap": "324:4947:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1440:5;1408:37;;:7;:19;1416:10;1408:19;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:37;;;1400:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;1557:15;1524:7;:19;1532:10;1524:19;;;;;;;;;;;;;;;:30;;:48;;;;1614:4;1583:7;:19;1591:10;1583:19;;;;;;;;;;;;;;;:28;;;:35;;;;;;;;;;;;;;;;;;1660:9;1629:7;:19;1637:10;1629:19;;;;;;;;;;;;;;;:27;;;:40;;;;;;;:::i;:::-;;;;;;;;1717:5;1680:7;:19;1688:10;1680:19;;;;;;;;;;;;;;;:34;;;:42;;;;;;;;;;;;;;;;;;1740:33;1751:10;1763:9;1740:33;;;;;;;:::i;:::-;;;;;;;;324:4947;;;;;3827:577;;;;;;;;;;;;;:::i;:::-;;3375:294;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4467:107;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:4;;;;;;;;;;;;;:::i;:::-;;2892:343:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5123:139;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2093:554;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1036:85:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;898:40:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;4584:529;;;;;;;;;;;;;:::i;:::-;;1918:198:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3827:577:2;3913:4;3881:36;;:7;:19;3889:10;3881:19;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:36;;;3873:45;;;;;;3932:9;3962:7;:19;3970:10;3962:19;;;;;;;;;;;;;;;:30;;;3944:15;:48;;;;:::i;:::-;3932:60;;4003:19;4037:12;;4025:4;:25;;;;:::i;:::-;4003:47;;4061:11;4079:7;:19;4087:10;4079:19;;;;;;;;;;;;;;;:27;;;4061:46;;4118:12;4143:4;4133:7;:14;;;;:::i;:::-;4118:29;;4158:10;4186:14;4171:8;:30;;;;:::i;:::-;4158:43;;4212:17;4241:4;4232:6;:13;;;;:::i;:::-;4212:33;;4294:13;4258:7;:19;4266:10;4258:19;;;;;;;;;;;;;;;:28;;:50;;;;4356:4;4319:7;:19;4327:10;4319:19;;;;;;;;;;;;;;;:34;;;:41;;;;;;;;;;;;;;;;;;4378:16;;;;;;;;;;3827:577;;;;;;:::o;3375:294::-;3425:3;3456:14;3486:9;3510:14;3539;3568:22;3604:12;;;;;;;;;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3441:193;;;;;;;;;;3654:5;3647:12;;;;;;;3375:294;:::o;4467:107::-;4509:4;4534:7;:19;4542:10;4534:19;;;;;;;;;;;;;;;:28;;;4527:35;;4467:107;:::o;1668:101:4:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2892:343:2:-;2946:3;2977:14;3007:9;3031:14;3060;3089:22;3125:12;;;;;;;;;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2962:193;;;;;;;;;;3168:14;3193:4;3185:5;:12;;;;:::i;:::-;3168:29;;3217:10;3210:17;;;;;;;;2892:343;:::o;5123:139::-;5188:7;5217;:17;5225:8;5217:17;;;;;;;;;;;;;;;:25;;;5210:32;;5123:139;;;:::o;2093:554::-;2193:4;2161:36;;:7;:19;2169:10;2161:19;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:36;;;2153:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;2314:4;2276:42;;:7;:19;2284:10;2276:19;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:42;;;2268:51;;;;;;2340:12;2355:7;:19;2363:10;2355:19;;;;;;;;;;;;;;;:27;;;2340:42;;2413:3;:12;;:21;2426:7;2413:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2485:1;2455:7;:19;2463:10;2455:19;;;;;;;;;;;;;;;:27;;:31;;;;2536:5;2499:7;:19;2507:10;2499:19;;;;;;;;;;;;;;;:34;;;:42;;;;;;;;;;;;;;;;;;2583:5;2552:7;:19;2560:10;2552:19;;;;;;;;;;;;;;;:28;;;:36;;;;;;;;;;;;;;;;;;2606:25;2618:3;2623:7;2606:25;;;;;;;:::i;:::-;;;;;;;;2093:554;;:::o;1036:85:4:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;898:40:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4584:529::-;4667:1;4635:7;:19;4643:10;4635:19;;;;;;;;;;;;;;;:28;;;:33;;4627:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4777:4;4745:36;;:7;:19;4753:10;4745:19;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:36;;;4737:45;;;;;;4839:4;4801:42;;:7;:19;4809:10;4801:19;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:42;;;4793:51;;;;;;4855:11;4869:7;:19;4877:10;4869:19;;;;;;;;;;;;;;;:28;;;4855:42;;4910:7;;;;;;;;;;;:16;;;4927:10;4939:6;4910:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4965:34;4980:10;4992:6;4965:34;;;;;;;:::i;:::-;;;;;;;;5043:1;5012:7;:19;5020:10;5012:19;;;;;;;;;;;;;;;:28;;:32;;;;5088:15;5055:7;:19;5063:10;5055:19;;;;;;;;;;;;;;;:30;;:48;;;;4584:529;:::o;1918:198:4:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;656:98:9:-;709:7;736:10;729:17;;656:98;:::o;2270:187:4:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;7:139:10:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:155::-;;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;212:95;;;;:::o;313:137::-;;398:6;392:13;383:22;;414:30;438:5;414:30;:::i;:::-;373:77;;;;:::o;456:141::-;;543:6;537:13;528:22;;559:32;585:5;559:32;:::i;:::-;518:79;;;;:::o;603:143::-;;691:6;685:13;676:22;;707:33;734:5;707:33;:::i;:::-;666:80;;;;:::o;752:141::-;;839:6;833:13;824:22;;855:32;881:5;855:32;:::i;:::-;814:79;;;;:::o;899:262::-;;1007:2;995:9;986:7;982:23;978:32;975:2;;;1023:1;1020;1013:12;975:2;1066:1;1091:53;1136:7;1127:6;1116:9;1112:22;1091:53;:::i;:::-;1081:63;;1037:117;965:196;;;;:::o;1167:278::-;;1283:2;1271:9;1262:7;1258:23;1254:32;1251:2;;;1299:1;1296;1289:12;1251:2;1342:1;1367:61;1420:7;1411:6;1400:9;1396:22;1367:61;:::i;:::-;1357:71;;1313:125;1241:204;;;;:::o;1451:278::-;;1567:2;1555:9;1546:7;1542:23;1538:32;1535:2;;;1583:1;1580;1573:12;1535:2;1626:1;1651:61;1704:7;1695:6;1684:9;1680:22;1651:61;:::i;:::-;1641:71;;1597:125;1525:204;;;;:::o;1735:904::-;;;;;;1919:3;1907:9;1898:7;1894:23;1890:33;1887:2;;;1936:1;1933;1926:12;1887:2;1979:1;2004:63;2059:7;2050:6;2039:9;2035:22;2004:63;:::i;:::-;1994:73;;1950:127;2116:2;2142:63;2197:7;2188:6;2177:9;2173:22;2142:63;:::i;:::-;2132:73;;2087:128;2254:2;2280:64;2336:7;2327:6;2316:9;2312:22;2280:64;:::i;:::-;2270:74;;2225:129;2393:2;2419:64;2475:7;2466:6;2455:9;2451:22;2419:64;:::i;:::-;2409:74;;2364:129;2532:3;2559:63;2614:7;2605:6;2594:9;2590:22;2559:63;:::i;:::-;2549:73;;2503:129;1877:762;;;;;;;;:::o;2645:147::-;2740:45;2779:5;2740:45;:::i;:::-;2735:3;2728:58;2718:74;;:::o;2798:118::-;2885:24;2903:5;2885:24;:::i;:::-;2880:3;2873:37;2863:53;;:::o;2922:109::-;3003:21;3018:5;3003:21;:::i;:::-;2998:3;2991:34;2981:50;;:::o;3037:115::-;3122:23;3139:5;3122:23;:::i;:::-;3117:3;3110:36;3100:52;;:::o;3158:385::-;;3321:67;3385:2;3380:3;3321:67;:::i;:::-;3314:74;;3418:34;3414:1;3409:3;3405:11;3398:55;3484:23;3479:2;3474:3;3470:12;3463:45;3534:2;3529:3;3525:12;3518:19;;3304:239;;;:::o;3549:370::-;;3712:67;3776:2;3771:3;3712:67;:::i;:::-;3705:74;;3809:34;3805:1;3800:3;3796:11;3789:55;3875:8;3870:2;3865:3;3861:12;3854:30;3910:2;3905:3;3901:12;3894:19;;3695:224;;;:::o;3925:387::-;;4088:67;4152:2;4147:3;4088:67;:::i;:::-;4081:74;;4185:34;4181:1;4176:3;4172:11;4165:55;4251:25;4246:2;4241:3;4237:12;4230:47;4303:2;4298:3;4294:12;4287:19;;4071:241;;;:::o;4318:395::-;;4481:67;4545:2;4540:3;4481:67;:::i;:::-;4474:74;;4578:34;4574:1;4569:3;4565:11;4558:55;4644:33;4639:2;4634:3;4630:12;4623:55;4704:2;4699:3;4695:12;4688:19;;4464:249;;;:::o;4719:330::-;;4882:67;4946:2;4941:3;4882:67;:::i;:::-;4875:74;;4979:34;4975:1;4970:3;4966:11;4959:55;5040:2;5035:3;5031:12;5024:19;;4865:184;;;:::o;5055:118::-;5142:24;5160:5;5142:24;:::i;:::-;5137:3;5130:37;5120:53;;:::o;5179:222::-;;5310:2;5299:9;5295:18;5287:26;;5323:71;5391:1;5380:9;5376:17;5367:6;5323:71;:::i;:::-;5277:124;;;;:::o;5407:348::-;;5574:2;5563:9;5559:18;5551:26;;5587:79;5663:1;5652:9;5648:17;5639:6;5587:79;:::i;:::-;5676:72;5744:2;5733:9;5729:18;5720:6;5676:72;:::i;:::-;5541:214;;;;;:::o;5761:332::-;;5920:2;5909:9;5905:18;5897:26;;5933:71;6001:1;5990:9;5986:17;5977:6;5933:71;:::i;:::-;6014:72;6082:2;6071:9;6067:18;6058:6;6014:72;:::i;:::-;5887:206;;;;;:::o;6099:640::-;;6330:3;6319:9;6315:19;6307:27;;6344:65;6406:1;6395:9;6391:17;6382:6;6344:65;:::i;:::-;6419:66;6481:2;6470:9;6466:18;6457:6;6419:66;:::i;:::-;6495:72;6563:2;6552:9;6548:18;6539:6;6495:72;:::i;:::-;6577;6645:2;6634:9;6630:18;6621:6;6577:72;:::i;:::-;6659:73;6727:3;6716:9;6712:19;6703:6;6659:73;:::i;:::-;6297:442;;;;;;;;:::o;6745:218::-;;6874:2;6863:9;6859:18;6851:26;;6887:69;6953:1;6942:9;6938:17;6929:6;6887:69;:::i;:::-;6841:122;;;;:::o;6969:419::-;;7173:2;7162:9;7158:18;7150:26;;7222:9;7216:4;7212:20;7208:1;7197:9;7193:17;7186:47;7250:131;7376:4;7250:131;:::i;:::-;7242:139;;7140:248;;;:::o;7394:419::-;;7598:2;7587:9;7583:18;7575:26;;7647:9;7641:4;7637:20;7633:1;7622:9;7618:17;7611:47;7675:131;7801:4;7675:131;:::i;:::-;7667:139;;7565:248;;;:::o;7819:419::-;;8023:2;8012:9;8008:18;8000:26;;8072:9;8066:4;8062:20;8058:1;8047:9;8043:17;8036:47;8100:131;8226:4;8100:131;:::i;:::-;8092:139;;7990:248;;;:::o;8244:419::-;;8448:2;8437:9;8433:18;8425:26;;8497:9;8491:4;8487:20;8483:1;8472:9;8468:17;8461:47;8525:131;8651:4;8525:131;:::i;:::-;8517:139;;8415:248;;;:::o;8669:419::-;;8873:2;8862:9;8858:18;8850:26;;8922:9;8916:4;8912:20;8908:1;8897:9;8893:17;8886:47;8950:131;9076:4;8950:131;:::i;:::-;8942:139;;8840:248;;;:::o;9094:222::-;;9225:2;9214:9;9210:18;9202:26;;9238:71;9306:1;9295:9;9291:17;9282:6;9238:71;:::i;:::-;9192:124;;;;:::o;9322:169::-;;9440:6;9435:3;9428:19;9480:4;9475:3;9471:14;9456:29;;9418:73;;;;:::o;9497:305::-;;9556:20;9574:1;9556:20;:::i;:::-;9551:25;;9590:20;9608:1;9590:20;:::i;:::-;9585:25;;9744:1;9676:66;9672:74;9669:1;9666:81;9663:2;;;9750:18;;:::i;:::-;9663:2;9794:1;9791;9787:9;9780:16;;9541:261;;;;:::o;9808:385::-;;9864:19;9881:1;9864:19;:::i;:::-;9859:24;;9897:19;9914:1;9897:19;:::i;:::-;9892:24;;9935:1;9925:2;;9940:18;;:::i;:::-;9925:2;10126:1;10123;10119:9;10116:1;10113:16;10032:66;10029:1;10026:73;10009:130;10006:2;;;10142:18;;:::i;:::-;10006:2;10185:1;10182;10177:10;10172:15;;9849:344;;;;:::o;10199:185::-;;10256:20;10274:1;10256:20;:::i;:::-;10251:25;;10290:20;10308:1;10290:20;:::i;:::-;10285:25;;10329:1;10319:2;;10334:18;;:::i;:::-;10319:2;10376:1;10373;10369:9;10364:14;;10241:143;;;;:::o;10390:991::-;;10452:19;10469:1;10452:19;:::i;:::-;10447:24;;10485:19;10502:1;10485:19;:::i;:::-;10480:24;;10686:1;10618:66;10614:74;10611:1;10608:81;10603:1;10600;10596:9;10592:1;10589;10585:9;10581:25;10577:113;10574:2;;;10693:18;;:::i;:::-;10574:2;10897:1;10829:66;10824:75;10821:1;10817:83;10812:1;10809;10805:9;10801:1;10798;10794:9;10790:25;10786:115;10783:2;;;10904:18;;:::i;:::-;10783:2;11108:1;11040:66;11035:75;11032:1;11028:83;11023:1;11020;11016:9;11012:1;11009;11005:9;11001:25;10997:115;10994:2;;;11115:18;;:::i;:::-;10994:2;11318:1;11250:66;11245:75;11242:1;11238:83;11233:1;11230;11226:9;11222:1;11219;11215:9;11211:25;11207:115;11204:2;;;11325:18;;:::i;:::-;11204:2;11373:1;11370;11366:9;11355:20;;10437:944;;;;:::o;11387:191::-;;11447:20;11465:1;11447:20;:::i;:::-;11442:25;;11481:20;11499:1;11481:20;:::i;:::-;11476:25;;11520:1;11517;11514:8;11511:2;;;11525:18;;:::i;:::-;11511:2;11570:1;11567;11563:9;11555:17;;11432:146;;;;:::o;11584:96::-;;11650:24;11668:5;11650:24;:::i;:::-;11639:35;;11629:51;;;:::o;11686:104::-;;11760:24;11778:5;11760:24;:::i;:::-;11749:35;;11739:51;;;:::o;11796:90::-;;11873:5;11866:13;11859:21;11848:32;;11838:48;;;:::o;11892:76::-;;11957:5;11946:16;;11936:32;;;:::o;11974:126::-;;12051:42;12044:5;12040:54;12029:65;;12019:81;;;:::o;12106:77::-;;12172:5;12161:16;;12151:32;;;:::o;12189:105::-;;12265:22;12258:5;12254:34;12243:45;;12233:61;;;:::o;12300:134::-;;12391:37;12422:5;12391:37;:::i;:::-;12378:50;;12368:66;;;:::o;12440:126::-;;12523:37;12554:5;12523:37;:::i;:::-;12510:50;;12500:66;;;:::o;12572:113::-;;12655:24;12673:5;12655:24;:::i;:::-;12642:37;;12632:53;;;:::o;12691:180::-;12739:77;12736:1;12729:88;12836:4;12833:1;12826:15;12860:4;12857:1;12850:15;12877:180;12925:77;12922:1;12915:88;13022:4;13019:1;13012:15;13046:4;13043:1;13036:15;13063:122;13136:24;13154:5;13136:24;:::i;:::-;13129:5;13126:35;13116:2;;13175:1;13172;13165:12;13116:2;13106:79;:::o;13191:138::-;13272:32;13298:5;13272:32;:::i;:::-;13265:5;13262:43;13252:2;;13319:1;13316;13309:12;13252:2;13242:87;:::o;13335:116::-;13405:21;13420:5;13405:21;:::i;:::-;13398:5;13395:32;13385:2;;13441:1;13438;13431:12;13385:2;13375:76;:::o;13457:120::-;13529:23;13546:5;13529:23;:::i;:::-;13522:5;13519:34;13509:2;;13567:1;13564;13557:12;13509:2;13499:78;:::o;13583:122::-;13656:24;13674:5;13656:24;:::i;:::-;13649:5;13646:35;13636:2;;13695:1;13692;13685:12;13636:2;13626:79;:::o;13711:120::-;13783:23;13800:5;13783:23;:::i;:::-;13776:5;13773:34;13763:2;;13821:1;13818;13811:12;13763:2;13753:78;:::o",
  "source": "pragma solidity ^0.8.0;\r\n\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n    /// @author Bloodyr\r\n    /// @title Staking eth\r\n    contract StakingEth is Ownable {\r\n      \r\n      AggregatorV3Interface internal priceMyToken;\r\n      IERC20 internal myToken;\r\n      \r\n      ///@notice used to differentiate users\r\n      struct Staker {\r\n        bool isStaker;\r\n        bool rewardCalculed;\r\n        uint balance;\r\n        uint myReward;\r\n        uint blockStake;\r\n      }\r\n\r\n      event ethDeposit(address depositAddress, uint amountStake);\r\n      event ethWithdraw(address withdrawAddress, uint amountdestake);\r\n      event rewardCalculed();\r\n      event rewardWithdraw(address from, uint amount);\r\n\r\n      mapping(address => Staker)public stakers;\r\n      \r\n      int internal timeInterest = 30 ;      \r\n      \r\n      constructor(address addressToken)  payable {\r\n        \r\n        myToken = IERC20(addressToken);\r\n        priceMyToken = AggregatorV3Interface(0x9326BFA02ADD2366b30bacB125260Af641031331);\r\n        \r\n      }\r\n\r\n      ///@notice Reception of eth\r\n      ///dev Check that the reward has already been awarded, Modify user structure, allow sending eth\r\n      receive() external payable {\r\n        require(stakers[msg.sender].isStaker == false, \"Vous ne devais pas avoir deja stacker des eth pour pour stacker\");\r\n        stakers[msg.sender].blockStake = block.timestamp;\r\n        stakers[msg.sender].isStaker = true;\r\n        stakers[msg.sender].balance += msg.value;\r\n        stakers[msg.sender].rewardCalculed = false;\r\n\r\n        emit ethDeposit(msg.sender, msg.value);\r\n      }\r\n      \r\n      ///@notice Withdraw Eth\r\n      ///@dev Require that the user structure be true, set an amount in relation to the balance,\r\n      ///@dev reassign the balance of the balance to 0,\r\n      ///@dev Return the eth to its owner, calculate the reward, send the reward, unify the user structure\r\n      function whithdraw(address payable _to) public {\r\n\r\n        require(stakers[msg.sender].isStaker == true, \"Vous devais avoir Staker des Eth pour pouvoir whithdraw\");\r\n        require(stakers[msg.sender].rewardCalculed == true);\r\n        \r\n        uint _amount = stakers[msg.sender].balance;\r\n        \r\n        \r\n        _to.transfer(_amount);\r\n        \r\n        stakers[msg.sender].balance = 0;\r\n\r\n        stakers[msg.sender].rewardCalculed = false;\r\n        stakers[msg.sender].isStaker = false;\r\n\r\n        emit ethWithdraw(_to, _amount);\r\n    \r\n      }\r\n\r\n      ///@notice return the value of my token\r\n      ///@dev use the oracle chainlink to retrieve the value at time T of the eth\r\n      ///@dev and set the value of my token with a ratio of / 1000\r\n      ///@return Price of my token \r\n      function getLatestMyTokenPrice() public view returns (int) {\r\n        (\r\n            uint80 roundID, \r\n            int price,\r\n            uint startedAt,\r\n            uint timeStamp,\r\n            uint80 answeredInRound\r\n        ) = priceMyToken.latestRoundData();\r\n\r\n        int tokenPrice = price / 1000;\r\n\r\n        return tokenPrice;\r\n    }\r\n\r\n      ///@notice return the value of my token\r\n      ///@dev use the oracle chainlink to retrieve the value at time T of the eth\r\n      function getLatestEthPrice() public view returns (int) {\r\n        (\r\n            uint80 roundID, \r\n            int price,\r\n            uint startedAt,\r\n            uint timeStamp,\r\n            uint80 answeredInRound\r\n        ) = priceMyToken.latestRoundData();\r\n\r\n        return price;\r\n      }\r\n\r\n      ///@notice Calculate the amount of the reward\r\n      ///@dev Calculate the amount of the reward compared to the eth, converted into my token\r\n      function calculedReward() public {\r\n\r\n        require(stakers[msg.sender].isStaker == true); \r\n\r\n        uint time = block.timestamp - stakers[msg.sender].blockStake;\r\n        uint numberOfReward = time / uint(timeInterest);\r\n        int balance = int(stakers[msg.sender].balance);\r\n        int interest = balance / 3000;\r\n        int reward = interest * int(numberOfReward);\r\n        int rewardMyToken = reward * 1000;\r\n\r\n        stakers[msg.sender].myReward = uint(rewardMyToken);\r\n        stakers[msg.sender].rewardCalculed = true;\r\n\r\n        emit rewardCalculed();\r\n      }\r\n\r\n      ///@return Return the accumulated reward word\r\n      function viewReward() public view returns(uint){\r\n\r\n        return stakers[msg.sender].myReward;\r\n\r\n      }\r\n\r\n      function claimReward() public {\r\n\r\n        require(stakers[msg.sender].myReward != 0, \"Vous n'avez pas de recompense pour ca Stake des token\");\r\n        require(stakers[msg.sender].isStaker == true);\r\n        require(stakers[msg.sender].rewardCalculed == true);\r\n        uint reward = stakers[msg.sender].myReward;\r\n\r\n        myToken.transfer(msg.sender, reward); \r\n\r\n        emit rewardWithdraw(msg.sender, reward);\r\n\r\n        stakers[msg.sender].myReward = 0;\r\n        stakers[msg.sender].blockStake = block.timestamp;\r\n      }\r\n\r\n      function getBalanceStack(address appelant) external view returns(uint256){\r\n\r\n         return stakers[appelant].balance;\r\n        \r\n      }\r\n\r\n    }",
  "sourcePath": "C:\\Users\\saive\\staking\\contracts\\StakingEth.sol",
  "ast": {
    "absolutePath": "project:/contracts/StakingEth.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        554
      ],
      "Context": [
        1410
      ],
      "IERC20": [
        737
      ],
      "Ownable": [
        659
      ],
      "StakingEth": [
        508
      ]
    },
    "id": 509,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 69,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 70,
        "nodeType": "ImportDirective",
        "scope": 509,
        "sourceUnit": 738,
        "src": "27:72:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 71,
        "nodeType": "ImportDirective",
        "scope": 509,
        "sourceUnit": 555,
        "src": "101:92:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 72,
        "nodeType": "ImportDirective",
        "scope": 509,
        "sourceUnit": 660,
        "src": "195:68:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 74,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 659,
              "src": "347:7:2"
            },
            "id": 75,
            "nodeType": "InheritanceSpecifier",
            "src": "347:7:2"
          }
        ],
        "contractDependencies": [
          659,
          1410
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 73,
          "nodeType": "StructuredDocumentation",
          "src": "271:47:2",
          "text": "@author Bloodyr\n @title Staking eth"
        },
        "fullyImplemented": true,
        "id": 508,
        "linearizedBaseContracts": [
          508,
          659,
          1410
        ],
        "name": "StakingEth",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 78,
            "mutability": "mutable",
            "name": "priceMyToken",
            "nodeType": "VariableDeclaration",
            "scope": 508,
            "src": "372:43:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$554",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 77,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 554,
                "src": "372:21:2"
              },
              "referencedDeclaration": 554,
              "src": "372:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$554",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 81,
            "mutability": "mutable",
            "name": "myToken",
            "nodeType": "VariableDeclaration",
            "scope": 508,
            "src": "424:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$737",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 80,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 79,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 737,
                "src": "424:6:2"
              },
              "referencedDeclaration": 737,
              "src": "424:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$737",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "StakingEth.Staker",
            "id": 92,
            "members": [
              {
                "constant": false,
                "id": 83,
                "mutability": "mutable",
                "name": "isStaker",
                "nodeType": "VariableDeclaration",
                "scope": 92,
                "src": "535:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 82,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "535:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 85,
                "mutability": "mutable",
                "name": "rewardCalculed",
                "nodeType": "VariableDeclaration",
                "scope": 92,
                "src": "559:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 84,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "559:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 87,
                "mutability": "mutable",
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "scope": 92,
                "src": "589:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 86,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "589:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 89,
                "mutability": "mutable",
                "name": "myReward",
                "nodeType": "VariableDeclaration",
                "scope": 92,
                "src": "612:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 88,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "612:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 91,
                "mutability": "mutable",
                "name": "blockStake",
                "nodeType": "VariableDeclaration",
                "scope": 92,
                "src": "636:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 90,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "636:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Staker",
            "nodeType": "StructDefinition",
            "scope": 508,
            "src": "510:151:2",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 98,
            "name": "ethDeposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "depositAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "688:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "712:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "712:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "687:42:2"
            },
            "src": "671:59:2"
          },
          {
            "anonymous": false,
            "id": 104,
            "name": "ethWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "756:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountdestake",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "781:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "755:45:2"
            },
            "src": "738:63:2"
          },
          {
            "anonymous": false,
            "id": 106,
            "name": "rewardCalculed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "829:2:2"
            },
            "src": "809:23:2"
          },
          {
            "anonymous": false,
            "id": 112,
            "name": "rewardWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "861:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "875:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "860:27:2"
            },
            "src": "840:48:2"
          },
          {
            "constant": false,
            "functionSelector": "9168ae72",
            "id": 117,
            "mutability": "mutable",
            "name": "stakers",
            "nodeType": "VariableDeclaration",
            "scope": 508,
            "src": "898:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
              "typeString": "mapping(address => struct StakingEth.Staker)"
            },
            "typeName": {
              "id": 116,
              "keyType": {
                "id": 113,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "906:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "898:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                "typeString": "mapping(address => struct StakingEth.Staker)"
              },
              "valueType": {
                "id": 115,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 114,
                  "name": "Staker",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "917:6:2"
                },
                "referencedDeclaration": 92,
                "src": "917:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Staker_$92_storage_ptr",
                  "typeString": "struct StakingEth.Staker"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 120,
            "mutability": "mutable",
            "name": "timeInterest",
            "nodeType": "VariableDeclaration",
            "scope": 508,
            "src": "955:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 118,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "955:3:2",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 119,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "983:2:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30_by_1",
                "typeString": "int_const 30"
              },
              "value": "30"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "1052:162:2",
              "statements": [
                {
                  "expression": {
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 125,
                      "name": "myToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "1073:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$737",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 127,
                          "name": "addressToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "1090:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 126,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "1083:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$737_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1083:20:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$737",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1073:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$737",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:30:2"
                },
                {
                  "expression": {
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 131,
                      "name": "priceMyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "1114:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$554",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307839333236424641303241444432333636623330626163423132353236304166363431303331333331",
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1151:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x9326BFA02ADD2366b30bacB125260Af641031331"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 132,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "1129:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$554_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1129:65:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$554",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1114:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$554",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1114:80:2"
                }
              ]
            },
            "id": 138,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "addressToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1021:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1021:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1020:22:2"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1052:0:2"
            },
            "scope": 508,
            "src": "1009:205:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "1389:394:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 143,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "1408:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                                "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                              }
                            },
                            "id": 146,
                            "indexExpression": {
                              "expression": {
                                "id": 144,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1416:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1416:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1408:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$92_storage",
                              "typeString": "struct StakingEth.Staker storage ref"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isStaker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83,
                          "src": "1408:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1440:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1408:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f7573206e6520646576616973207061732061766f69722064656a6120737461636b6572206465732065746820706f757220706f757220737461636b6572",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1447:65:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6baf025501f0c4272111836abec5c956579f667d3ef74a22615fdcdb4b161834",
                          "typeString": "literal_string \"Vous ne devais pas avoir deja stacker des eth pour pour stacker\""
                        },
                        "value": "Vous ne devais pas avoir deja stacker des eth pour pour stacker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6baf025501f0c4272111836abec5c956579f667d3ef74a22615fdcdb4b161834",
                          "typeString": "literal_string \"Vous ne devais pas avoir deja stacker des eth pour pour stacker\""
                        }
                      ],
                      "id": 142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1400:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1400:113:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1400:113:2"
                },
                {
                  "expression": {
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 153,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "1524:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 156,
                        "indexExpression": {
                          "expression": {
                            "id": 154,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1532:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1532:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1524:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blockStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "1524:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 158,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1557:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1557:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1524:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "1524:48:2"
                },
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 162,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "1583:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 165,
                        "indexExpression": {
                          "expression": {
                            "id": 163,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1591:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1591:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1583:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isStaker",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83,
                      "src": "1583:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1614:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1583:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1583:35:2"
                },
                {
                  "expression": {
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 170,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "1629:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 173,
                        "indexExpression": {
                          "expression": {
                            "id": 171,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1637:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1637:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1629:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "1629:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 175,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1660:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1660:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1629:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:40:2"
                },
                {
                  "expression": {
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 179,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "1680:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 182,
                        "indexExpression": {
                          "expression": {
                            "id": 180,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1688:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1688:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1680:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardCalculed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "1680:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1717:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1680:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "1680:42:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 188,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1751:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1751:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 190,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1763:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1763:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 187,
                      "name": "ethDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "1740:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1740:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "EmitStatement",
                  "src": "1735:38:2"
                }
              ]
            },
            "documentation": {
              "id": 139,
              "nodeType": "StructuredDocumentation",
              "src": "1224:130:2",
              "text": "@notice Reception of eth\ndev Check that the reward has already been awarded, Modify user structure, allow sending eth"
            },
            "id": 195,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1369:2:2"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1389:0:2"
            },
            "scope": 508,
            "src": "1362:421:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "2140:507:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 202,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "2161:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                                "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                              }
                            },
                            "id": 205,
                            "indexExpression": {
                              "expression": {
                                "id": 203,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2169:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2169:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2161:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$92_storage",
                              "typeString": "struct StakingEth.Staker storage ref"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isStaker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83,
                          "src": "2161:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2193:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2161:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f7573206465766169732061766f6972205374616b6572206465732045746820706f757220706f75766f697220776869746864726177",
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2199:57:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28416cfb3819639ed92e581fc09859f2278a82c2070510dad51a1c8c74f06752",
                          "typeString": "literal_string \"Vous devais avoir Staker des Eth pour pouvoir whithdraw\""
                        },
                        "value": "Vous devais avoir Staker des Eth pour pouvoir whithdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28416cfb3819639ed92e581fc09859f2278a82c2070510dad51a1c8c74f06752",
                          "typeString": "literal_string \"Vous devais avoir Staker des Eth pour pouvoir whithdraw\""
                        }
                      ],
                      "id": 201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2153:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2153:104:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "2153:104:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 213,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "2276:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                                "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                              }
                            },
                            "id": 216,
                            "indexExpression": {
                              "expression": {
                                "id": 214,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2284:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2284:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2276:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$92_storage",
                              "typeString": "struct StakingEth.Staker storage ref"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardCalculed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85,
                          "src": "2276:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2314:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2276:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2268:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2268:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "2268:51:2"
                },
                {
                  "assignments": [
                    223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 223,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "2340:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 222,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2340:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 229,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 224,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "2355:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                          "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                        }
                      },
                      "id": 227,
                      "indexExpression": {
                        "expression": {
                          "id": 225,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2363:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2363:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2355:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$92_storage",
                        "typeString": "struct StakingEth.Staker storage ref"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 87,
                    "src": "2355:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2340:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 233,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2426:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 230,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "2413:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2413:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2413:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "2413:21:2"
                },
                {
                  "expression": {
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 236,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "2455:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 239,
                        "indexExpression": {
                          "expression": {
                            "id": 237,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2463:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2463:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2455:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "2455:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2485:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2455:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "2455:31:2"
                },
                {
                  "expression": {
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 244,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "2499:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 247,
                        "indexExpression": {
                          "expression": {
                            "id": 245,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2507:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2507:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2499:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 248,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardCalculed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "2499:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2536:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2499:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "2499:42:2"
                },
                {
                  "expression": {
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 252,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "2552:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 255,
                        "indexExpression": {
                          "expression": {
                            "id": 253,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2560:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2560:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2552:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isStaker",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83,
                      "src": "2552:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2583:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2552:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "2552:36:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 261,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "2618:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 262,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2623:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 260,
                      "name": "ethWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "2606:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2606:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "EmitStatement",
                  "src": "2601:30:2"
                }
              ]
            },
            "documentation": {
              "id": 196,
              "nodeType": "StructuredDocumentation",
              "src": "1799:286:2",
              "text": "@notice Withdraw Eth\n@dev Require that the user structure be true, set an amount in relation to the balance,\n@dev reassign the balance of the balance to 0,\n@dev Return the eth to its owner, calculate the reward, send the reward, unify the user structure"
            },
            "functionSelector": "8ac04358",
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "whithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "2112:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2112:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2111:21:2"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2140:0:2"
            },
            "scope": 508,
            "src": "2093:554:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "2951:284:2",
              "statements": [
                {
                  "assignments": [
                    273,
                    275,
                    277,
                    279,
                    281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 273,
                      "mutability": "mutable",
                      "name": "roundID",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "2977:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 272,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "2977:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 275,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "3007:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 274,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "3007:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 277,
                      "mutability": "mutable",
                      "name": "startedAt",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "3031:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 276,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3031:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "timeStamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "3060:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3060:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 281,
                      "mutability": "mutable",
                      "name": "answeredInRound",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "3089:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 280,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "3089:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 285,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 282,
                        "name": "priceMyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "3125:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$554",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 553,
                      "src": "3125:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3125:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2962:193:2"
                },
                {
                  "assignments": [
                    287
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 287,
                      "mutability": "mutable",
                      "name": "tokenPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "3168:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 286,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "3168:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 291,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 288,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "3185:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3193:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "3185:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3168:29:2"
                },
                {
                  "expression": {
                    "id": 292,
                    "name": "tokenPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 287,
                    "src": "3217:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 271,
                  "id": 293,
                  "nodeType": "Return",
                  "src": "3210:17:2"
                }
              ]
            },
            "documentation": {
              "id": 267,
              "nodeType": "StructuredDocumentation",
              "src": "2657:227:2",
              "text": "@notice return the value of my token\n@dev use the oracle chainlink to retrieve the value at time T of the eth\n@dev and set the value of my token with a ratio of / 1000\n@return Price of my token "
            },
            "functionSelector": "766613a2",
            "id": 295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestMyTokenPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2922:2:2"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2946:3:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "2946:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2945:5:2"
            },
            "scope": 508,
            "src": "2892:343:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "3430:239:2",
              "statements": [
                {
                  "assignments": [
                    302,
                    304,
                    306,
                    308,
                    310
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 302,
                      "mutability": "mutable",
                      "name": "roundID",
                      "nodeType": "VariableDeclaration",
                      "scope": 317,
                      "src": "3456:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 301,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "3456:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 304,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "scope": 317,
                      "src": "3486:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 303,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "3486:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 306,
                      "mutability": "mutable",
                      "name": "startedAt",
                      "nodeType": "VariableDeclaration",
                      "scope": 317,
                      "src": "3510:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 305,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3510:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 308,
                      "mutability": "mutable",
                      "name": "timeStamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 317,
                      "src": "3539:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 307,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3539:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 310,
                      "mutability": "mutable",
                      "name": "answeredInRound",
                      "nodeType": "VariableDeclaration",
                      "scope": 317,
                      "src": "3568:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 309,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "3568:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 314,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 311,
                        "name": "priceMyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "3604:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$554",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 553,
                      "src": "3604:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3604:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3441:193:2"
                },
                {
                  "expression": {
                    "id": 315,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 304,
                    "src": "3654:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 300,
                  "id": 316,
                  "nodeType": "Return",
                  "src": "3647:12:2"
                }
              ]
            },
            "documentation": {
              "id": 296,
              "nodeType": "StructuredDocumentation",
              "src": "3245:122:2",
              "text": "@notice return the value of my token\n@dev use the oracle chainlink to retrieve the value at time T of the eth"
            },
            "functionSelector": "30c0b9ec",
            "id": 318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestEthPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3401:2:2"
            },
            "returnParameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3425:3:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "3425:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3424:5:2"
            },
            "scope": 508,
            "src": "3375:294:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "3860:544:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 323,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "3881:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                                "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                              }
                            },
                            "id": 326,
                            "indexExpression": {
                              "expression": {
                                "id": 324,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3889:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3889:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3881:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$92_storage",
                              "typeString": "struct StakingEth.Staker storage ref"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isStaker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83,
                          "src": "3881:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3913:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3881:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3873:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3873:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "3873:45:2"
                },
                {
                  "assignments": [
                    333
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 333,
                      "mutability": "mutable",
                      "name": "time",
                      "nodeType": "VariableDeclaration",
                      "scope": 406,
                      "src": "3932:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 332,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3932:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 342,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 334,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3944:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3944:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 336,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "3962:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 339,
                        "indexExpression": {
                          "expression": {
                            "id": 337,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3970:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3970:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3962:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 340,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "blockStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "3962:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3944:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3932:60:2"
                },
                {
                  "assignments": [
                    344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 344,
                      "mutability": "mutable",
                      "name": "numberOfReward",
                      "nodeType": "VariableDeclaration",
                      "scope": 406,
                      "src": "4003:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 343,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4003:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 351,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 345,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "4025:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 348,
                          "name": "timeInterest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "4037:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4032:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 346,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4032:4:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4032:18:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4025:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4003:47:2"
                },
                {
                  "assignments": [
                    353
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 353,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 406,
                      "src": "4061:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 352,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4061:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 362,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 356,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 117,
                            "src": "4079:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                              "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                            }
                          },
                          "id": 359,
                          "indexExpression": {
                            "expression": {
                              "id": 357,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4087:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4087:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4079:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$92_storage",
                            "typeString": "struct StakingEth.Staker storage ref"
                          }
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87,
                        "src": "4079:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4075:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int256_$",
                        "typeString": "type(int256)"
                      },
                      "typeName": {
                        "id": 354,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4075:3:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4075:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4061:46:2"
                },
                {
                  "assignments": [
                    364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 364,
                      "mutability": "mutable",
                      "name": "interest",
                      "nodeType": "VariableDeclaration",
                      "scope": 406,
                      "src": "4118:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 363,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4118:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 368,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 365,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "4133:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "33303030",
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4143:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3000_by_1",
                        "typeString": "int_const 3000"
                      },
                      "value": "3000"
                    },
                    "src": "4133:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4118:29:2"
                },
                {
                  "assignments": [
                    370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 370,
                      "mutability": "mutable",
                      "name": "reward",
                      "nodeType": "VariableDeclaration",
                      "scope": 406,
                      "src": "4158:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 369,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4158:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 377,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 371,
                      "name": "interest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "4171:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 374,
                          "name": "numberOfReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "4186:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4182:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "int",
                          "nodeType": "ElementaryTypeName",
                          "src": "4182:3:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4182:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "4171:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4158:43:2"
                },
                {
                  "assignments": [
                    379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 379,
                      "mutability": "mutable",
                      "name": "rewardMyToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 406,
                      "src": "4212:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 378,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4212:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 383,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 380,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "4232:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4241:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "4232:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4212:33:2"
                },
                {
                  "expression": {
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 384,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "4258:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 387,
                        "indexExpression": {
                          "expression": {
                            "id": 385,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4266:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4266:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4258:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "myReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89,
                      "src": "4258:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 391,
                          "name": "rewardMyToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 379,
                          "src": "4294:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4289:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4289:4:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4289:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4258:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "4258:50:2"
                },
                {
                  "expression": {
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 395,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "4319:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 398,
                        "indexExpression": {
                          "expression": {
                            "id": 396,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4327:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4327:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4319:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardCalculed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "4319:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4356:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4319:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "4319:41:2"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 403,
                      "name": "rewardCalculed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "4378:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4378:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "EmitStatement",
                  "src": "4373:21:2"
                }
              ]
            },
            "documentation": {
              "id": 319,
              "nodeType": "StructuredDocumentation",
              "src": "3679:140:2",
              "text": "@notice Calculate the amount of the reward\n@dev Calculate the amount of the reward compared to the eth, converted into my token"
            },
            "functionSelector": "25b0098d",
            "id": 407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculedReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3850:2:2"
            },
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3860:0:2"
            },
            "scope": 508,
            "src": "3827:577:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 419,
              "nodeType": "Block",
              "src": "4514:60:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 413,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "4534:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                          "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                        }
                      },
                      "id": 416,
                      "indexExpression": {
                        "expression": {
                          "id": 414,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4542:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4542:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4534:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$92_storage",
                        "typeString": "struct StakingEth.Staker storage ref"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "myReward",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 89,
                    "src": "4534:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 412,
                  "id": 418,
                  "nodeType": "Return",
                  "src": "4527:35:2"
                }
              ]
            },
            "documentation": {
              "id": 408,
              "nodeType": "StructuredDocumentation",
              "src": "4414:45:2",
              "text": "@return Return the accumulated reward word"
            },
            "functionSelector": "34f2015d",
            "id": 420,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4486:2:2"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 411,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "4509:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4509:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4508:6:2"
            },
            "scope": 508,
            "src": "4467:107:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 493,
              "nodeType": "Block",
              "src": "4614:499:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 424,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "4635:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                                "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                              }
                            },
                            "id": 427,
                            "indexExpression": {
                              "expression": {
                                "id": 425,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4643:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4643:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4635:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$92_storage",
                              "typeString": "struct StakingEth.Staker storage ref"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "myReward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89,
                          "src": "4635:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4667:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4635:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f7573206e276176657a20706173206465207265636f6d70656e736520706f7572206361205374616b652064657320746f6b656e",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4670:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ec2810fdba070204c3f67c52cf6c3ef167305facd7fb0eef150793ffb5e9ce5",
                          "typeString": "literal_string \"Vous n'avez pas de recompense pour ca Stake des token\""
                        },
                        "value": "Vous n'avez pas de recompense pour ca Stake des token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ec2810fdba070204c3f67c52cf6c3ef167305facd7fb0eef150793ffb5e9ce5",
                          "typeString": "literal_string \"Vous n'avez pas de recompense pour ca Stake des token\""
                        }
                      ],
                      "id": 423,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4627:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4627:99:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "4627:99:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 435,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "4745:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                                "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                              }
                            },
                            "id": 438,
                            "indexExpression": {
                              "expression": {
                                "id": 436,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4753:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4753:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4745:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$92_storage",
                              "typeString": "struct StakingEth.Staker storage ref"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isStaker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83,
                          "src": "4745:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4777:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4745:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 434,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4737:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4737:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "4737:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 445,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "4801:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                                "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                              }
                            },
                            "id": 448,
                            "indexExpression": {
                              "expression": {
                                "id": 446,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4809:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4809:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4801:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$92_storage",
                              "typeString": "struct StakingEth.Staker storage ref"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardCalculed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85,
                          "src": "4801:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4839:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4801:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 444,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4793:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4793:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "4793:51:2"
                },
                {
                  "assignments": [
                    455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 455,
                      "mutability": "mutable",
                      "name": "reward",
                      "nodeType": "VariableDeclaration",
                      "scope": 493,
                      "src": "4855:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 454,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4855:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 461,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 456,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "4869:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                          "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                        }
                      },
                      "id": 459,
                      "indexExpression": {
                        "expression": {
                          "id": 457,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4877:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4877:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4869:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$92_storage",
                        "typeString": "struct StakingEth.Staker storage ref"
                      }
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "myReward",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 89,
                    "src": "4869:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4855:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 465,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4927:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4927:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 467,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "4939:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 462,
                        "name": "myToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "4910:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$737",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 686,
                      "src": "4910:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4910:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "4910:36:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 471,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4980:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4980:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 473,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "4992:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 470,
                      "name": "rewardWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "4965:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4965:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 475,
                  "nodeType": "EmitStatement",
                  "src": "4960:39:2"
                },
                {
                  "expression": {
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 476,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "5012:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 479,
                        "indexExpression": {
                          "expression": {
                            "id": 477,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5020:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5020:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5012:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "myReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89,
                      "src": "5012:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5043:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5012:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:32:2"
                },
                {
                  "expression": {
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 484,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "5055:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 487,
                        "indexExpression": {
                          "expression": {
                            "id": 485,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5063:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5063:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5055:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blockStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "5055:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 489,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5088:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5088:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5055:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "5055:48:2"
                }
              ]
            },
            "functionSelector": "b88a802f",
            "id": 494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4604:2:2"
            },
            "returnParameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4614:0:2"
            },
            "scope": 508,
            "src": "4584:529:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 506,
              "nodeType": "Block",
              "src": "5196:66:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 501,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "5217:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                          "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                        }
                      },
                      "id": 503,
                      "indexExpression": {
                        "id": 502,
                        "name": "appelant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 496,
                        "src": "5225:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5217:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$92_storage",
                        "typeString": "struct StakingEth.Staker storage ref"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 87,
                    "src": "5217:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 500,
                  "id": 505,
                  "nodeType": "Return",
                  "src": "5210:32:2"
                }
              ]
            },
            "functionSelector": "7c01f25c",
            "id": 507,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalanceStack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 496,
                  "mutability": "mutable",
                  "name": "appelant",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "5148:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5148:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5147:18:2"
            },
            "returnParameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 499,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "5188:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5188:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5187:9:2"
            },
            "scope": 508,
            "src": "5123:139:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 509,
        "src": "324:4947:2"
      }
    ],
    "src": "0:5271:2"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/StakingEth.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        554
      ],
      "Context": [
        1410
      ],
      "IERC20": [
        737
      ],
      "Ownable": [
        659
      ],
      "StakingEth": [
        508
      ]
    },
    "id": 509,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 69,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 70,
        "nodeType": "ImportDirective",
        "scope": 509,
        "sourceUnit": 738,
        "src": "27:72:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "../node_modules/@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 71,
        "nodeType": "ImportDirective",
        "scope": 509,
        "sourceUnit": 555,
        "src": "101:92:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 72,
        "nodeType": "ImportDirective",
        "scope": 509,
        "sourceUnit": 660,
        "src": "195:68:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 74,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 659,
              "src": "347:7:2"
            },
            "id": 75,
            "nodeType": "InheritanceSpecifier",
            "src": "347:7:2"
          }
        ],
        "contractDependencies": [
          659,
          1410
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 73,
          "nodeType": "StructuredDocumentation",
          "src": "271:47:2",
          "text": "@author Bloodyr\n @title Staking eth"
        },
        "fullyImplemented": true,
        "id": 508,
        "linearizedBaseContracts": [
          508,
          659,
          1410
        ],
        "name": "StakingEth",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 78,
            "mutability": "mutable",
            "name": "priceMyToken",
            "nodeType": "VariableDeclaration",
            "scope": 508,
            "src": "372:43:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$554",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 77,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 76,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 554,
                "src": "372:21:2"
              },
              "referencedDeclaration": 554,
              "src": "372:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$554",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 81,
            "mutability": "mutable",
            "name": "myToken",
            "nodeType": "VariableDeclaration",
            "scope": 508,
            "src": "424:23:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$737",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 80,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 79,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 737,
                "src": "424:6:2"
              },
              "referencedDeclaration": 737,
              "src": "424:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$737",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "StakingEth.Staker",
            "id": 92,
            "members": [
              {
                "constant": false,
                "id": 83,
                "mutability": "mutable",
                "name": "isStaker",
                "nodeType": "VariableDeclaration",
                "scope": 92,
                "src": "535:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 82,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "535:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 85,
                "mutability": "mutable",
                "name": "rewardCalculed",
                "nodeType": "VariableDeclaration",
                "scope": 92,
                "src": "559:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 84,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "559:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 87,
                "mutability": "mutable",
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "scope": 92,
                "src": "589:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 86,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "589:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 89,
                "mutability": "mutable",
                "name": "myReward",
                "nodeType": "VariableDeclaration",
                "scope": 92,
                "src": "612:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 88,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "612:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 91,
                "mutability": "mutable",
                "name": "blockStake",
                "nodeType": "VariableDeclaration",
                "scope": 92,
                "src": "636:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 90,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "636:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Staker",
            "nodeType": "StructDefinition",
            "scope": 508,
            "src": "510:151:2",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 98,
            "name": "ethDeposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "depositAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "688:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountStake",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "712:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "712:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "687:42:2"
            },
            "src": "671:59:2"
          },
          {
            "anonymous": false,
            "id": 104,
            "name": "ethWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "756:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amountdestake",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "781:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "755:45:2"
            },
            "src": "738:63:2"
          },
          {
            "anonymous": false,
            "id": 106,
            "name": "rewardCalculed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "829:2:2"
            },
            "src": "809:23:2"
          },
          {
            "anonymous": false,
            "id": 112,
            "name": "rewardWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "861:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "875:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "860:27:2"
            },
            "src": "840:48:2"
          },
          {
            "constant": false,
            "functionSelector": "9168ae72",
            "id": 117,
            "mutability": "mutable",
            "name": "stakers",
            "nodeType": "VariableDeclaration",
            "scope": 508,
            "src": "898:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
              "typeString": "mapping(address => struct StakingEth.Staker)"
            },
            "typeName": {
              "id": 116,
              "keyType": {
                "id": 113,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "906:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "898:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                "typeString": "mapping(address => struct StakingEth.Staker)"
              },
              "valueType": {
                "id": 115,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 114,
                  "name": "Staker",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "917:6:2"
                },
                "referencedDeclaration": 92,
                "src": "917:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Staker_$92_storage_ptr",
                  "typeString": "struct StakingEth.Staker"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 120,
            "mutability": "mutable",
            "name": "timeInterest",
            "nodeType": "VariableDeclaration",
            "scope": 508,
            "src": "955:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 118,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "955:3:2",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 119,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "983:2:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30_by_1",
                "typeString": "int_const 30"
              },
              "value": "30"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "1052:162:2",
              "statements": [
                {
                  "expression": {
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 125,
                      "name": "myToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "1073:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$737",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 127,
                          "name": "addressToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122,
                          "src": "1090:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 126,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "1083:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$737_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1083:20:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$737",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1073:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$737",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1073:30:2"
                },
                {
                  "expression": {
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 131,
                      "name": "priceMyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "1114:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$554",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307839333236424641303241444432333636623330626163423132353236304166363431303331333331",
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1151:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x9326BFA02ADD2366b30bacB125260Af641031331"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 132,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "1129:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$554_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1129:65:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$554",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "1114:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$554",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1114:80:2"
                }
              ]
            },
            "id": 138,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "addressToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1021:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1021:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1020:22:2"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1052:0:2"
            },
            "scope": 508,
            "src": "1009:205:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "1389:394:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 143,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "1408:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                                "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                              }
                            },
                            "id": 146,
                            "indexExpression": {
                              "expression": {
                                "id": 144,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1416:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1416:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1408:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$92_storage",
                              "typeString": "struct StakingEth.Staker storage ref"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isStaker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83,
                          "src": "1408:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1440:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1408:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f7573206e6520646576616973207061732061766f69722064656a6120737461636b6572206465732065746820706f757220706f757220737461636b6572",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1447:65:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6baf025501f0c4272111836abec5c956579f667d3ef74a22615fdcdb4b161834",
                          "typeString": "literal_string \"Vous ne devais pas avoir deja stacker des eth pour pour stacker\""
                        },
                        "value": "Vous ne devais pas avoir deja stacker des eth pour pour stacker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6baf025501f0c4272111836abec5c956579f667d3ef74a22615fdcdb4b161834",
                          "typeString": "literal_string \"Vous ne devais pas avoir deja stacker des eth pour pour stacker\""
                        }
                      ],
                      "id": 142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1400:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1400:113:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1400:113:2"
                },
                {
                  "expression": {
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 153,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "1524:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 156,
                        "indexExpression": {
                          "expression": {
                            "id": 154,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1532:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1532:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1524:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blockStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "1524:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 158,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1557:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1557:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1524:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "1524:48:2"
                },
                {
                  "expression": {
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 162,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "1583:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 165,
                        "indexExpression": {
                          "expression": {
                            "id": 163,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1591:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1591:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1583:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isStaker",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83,
                      "src": "1583:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1614:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1583:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1583:35:2"
                },
                {
                  "expression": {
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 170,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "1629:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 173,
                        "indexExpression": {
                          "expression": {
                            "id": 171,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1637:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1637:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1629:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "1629:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 175,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1660:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1660:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1629:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:40:2"
                },
                {
                  "expression": {
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 179,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "1680:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 182,
                        "indexExpression": {
                          "expression": {
                            "id": 180,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1688:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1688:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1680:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardCalculed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "1680:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1717:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1680:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "1680:42:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 188,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1751:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1751:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 190,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1763:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1763:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 187,
                      "name": "ethDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "1740:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1740:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "EmitStatement",
                  "src": "1735:38:2"
                }
              ]
            },
            "documentation": {
              "id": 139,
              "nodeType": "StructuredDocumentation",
              "src": "1224:130:2",
              "text": "@notice Reception of eth\ndev Check that the reward has already been awarded, Modify user structure, allow sending eth"
            },
            "id": 195,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1369:2:2"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1389:0:2"
            },
            "scope": 508,
            "src": "1362:421:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "2140:507:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 202,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "2161:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                                "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                              }
                            },
                            "id": 205,
                            "indexExpression": {
                              "expression": {
                                "id": 203,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2169:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2169:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2161:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$92_storage",
                              "typeString": "struct StakingEth.Staker storage ref"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isStaker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83,
                          "src": "2161:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2193:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2161:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f7573206465766169732061766f6972205374616b6572206465732045746820706f757220706f75766f697220776869746864726177",
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2199:57:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28416cfb3819639ed92e581fc09859f2278a82c2070510dad51a1c8c74f06752",
                          "typeString": "literal_string \"Vous devais avoir Staker des Eth pour pouvoir whithdraw\""
                        },
                        "value": "Vous devais avoir Staker des Eth pour pouvoir whithdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28416cfb3819639ed92e581fc09859f2278a82c2070510dad51a1c8c74f06752",
                          "typeString": "literal_string \"Vous devais avoir Staker des Eth pour pouvoir whithdraw\""
                        }
                      ],
                      "id": 201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2153:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2153:104:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "2153:104:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 213,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "2276:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                                "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                              }
                            },
                            "id": 216,
                            "indexExpression": {
                              "expression": {
                                "id": 214,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2284:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2284:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2276:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$92_storage",
                              "typeString": "struct StakingEth.Staker storage ref"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardCalculed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85,
                          "src": "2276:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2314:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2276:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2268:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2268:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "ExpressionStatement",
                  "src": "2268:51:2"
                },
                {
                  "assignments": [
                    223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 223,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 265,
                      "src": "2340:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 222,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2340:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 229,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 224,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "2355:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                          "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                        }
                      },
                      "id": 227,
                      "indexExpression": {
                        "expression": {
                          "id": 225,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2363:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2363:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2355:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$92_storage",
                        "typeString": "struct StakingEth.Staker storage ref"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 87,
                    "src": "2355:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2340:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 233,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2426:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 230,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "2413:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2413:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2413:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "2413:21:2"
                },
                {
                  "expression": {
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 236,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "2455:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 239,
                        "indexExpression": {
                          "expression": {
                            "id": 237,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2463:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2463:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2455:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87,
                      "src": "2455:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2485:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2455:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "2455:31:2"
                },
                {
                  "expression": {
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 244,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "2499:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 247,
                        "indexExpression": {
                          "expression": {
                            "id": 245,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2507:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2507:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2499:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 248,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardCalculed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "2499:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2536:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2499:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "2499:42:2"
                },
                {
                  "expression": {
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 252,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "2552:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 255,
                        "indexExpression": {
                          "expression": {
                            "id": 253,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2560:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2560:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2552:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isStaker",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83,
                      "src": "2552:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2583:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2552:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "2552:36:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 261,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "2618:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 262,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2623:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 260,
                      "name": "ethWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104,
                      "src": "2606:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2606:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "EmitStatement",
                  "src": "2601:30:2"
                }
              ]
            },
            "documentation": {
              "id": 196,
              "nodeType": "StructuredDocumentation",
              "src": "1799:286:2",
              "text": "@notice Withdraw Eth\n@dev Require that the user structure be true, set an amount in relation to the balance,\n@dev reassign the balance of the balance to 0,\n@dev Return the eth to its owner, calculate the reward, send the reward, unify the user structure"
            },
            "functionSelector": "8ac04358",
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "whithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "2112:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2112:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2111:21:2"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2140:0:2"
            },
            "scope": 508,
            "src": "2093:554:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "2951:284:2",
              "statements": [
                {
                  "assignments": [
                    273,
                    275,
                    277,
                    279,
                    281
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 273,
                      "mutability": "mutable",
                      "name": "roundID",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "2977:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 272,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "2977:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 275,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "3007:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 274,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "3007:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 277,
                      "mutability": "mutable",
                      "name": "startedAt",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "3031:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 276,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3031:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "timeStamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "3060:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3060:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 281,
                      "mutability": "mutable",
                      "name": "answeredInRound",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "3089:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 280,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "3089:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 285,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 282,
                        "name": "priceMyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "3125:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$554",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 553,
                      "src": "3125:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3125:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2962:193:2"
                },
                {
                  "assignments": [
                    287
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 287,
                      "mutability": "mutable",
                      "name": "tokenPrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 294,
                      "src": "3168:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 286,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "3168:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 291,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 288,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "3185:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3193:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "3185:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3168:29:2"
                },
                {
                  "expression": {
                    "id": 292,
                    "name": "tokenPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 287,
                    "src": "3217:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 271,
                  "id": 293,
                  "nodeType": "Return",
                  "src": "3210:17:2"
                }
              ]
            },
            "documentation": {
              "id": 267,
              "nodeType": "StructuredDocumentation",
              "src": "2657:227:2",
              "text": "@notice return the value of my token\n@dev use the oracle chainlink to retrieve the value at time T of the eth\n@dev and set the value of my token with a ratio of / 1000\n@return Price of my token "
            },
            "functionSelector": "766613a2",
            "id": 295,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestMyTokenPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2922:2:2"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2946:3:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "2946:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2945:5:2"
            },
            "scope": 508,
            "src": "2892:343:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "3430:239:2",
              "statements": [
                {
                  "assignments": [
                    302,
                    304,
                    306,
                    308,
                    310
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 302,
                      "mutability": "mutable",
                      "name": "roundID",
                      "nodeType": "VariableDeclaration",
                      "scope": 317,
                      "src": "3456:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 301,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "3456:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 304,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "scope": 317,
                      "src": "3486:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 303,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "3486:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 306,
                      "mutability": "mutable",
                      "name": "startedAt",
                      "nodeType": "VariableDeclaration",
                      "scope": 317,
                      "src": "3510:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 305,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3510:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 308,
                      "mutability": "mutable",
                      "name": "timeStamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 317,
                      "src": "3539:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 307,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3539:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 310,
                      "mutability": "mutable",
                      "name": "answeredInRound",
                      "nodeType": "VariableDeclaration",
                      "scope": 317,
                      "src": "3568:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 309,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "3568:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 314,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 311,
                        "name": "priceMyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "3604:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$554",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 553,
                      "src": "3604:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3604:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3441:193:2"
                },
                {
                  "expression": {
                    "id": 315,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 304,
                    "src": "3654:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 300,
                  "id": 316,
                  "nodeType": "Return",
                  "src": "3647:12:2"
                }
              ]
            },
            "documentation": {
              "id": 296,
              "nodeType": "StructuredDocumentation",
              "src": "3245:122:2",
              "text": "@notice return the value of my token\n@dev use the oracle chainlink to retrieve the value at time T of the eth"
            },
            "functionSelector": "30c0b9ec",
            "id": 318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestEthPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3401:2:2"
            },
            "returnParameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "3425:3:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "3425:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3424:5:2"
            },
            "scope": 508,
            "src": "3375:294:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "3860:544:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 323,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "3881:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                                "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                              }
                            },
                            "id": 326,
                            "indexExpression": {
                              "expression": {
                                "id": 324,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3889:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3889:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3881:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$92_storage",
                              "typeString": "struct StakingEth.Staker storage ref"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isStaker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83,
                          "src": "3881:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3913:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3881:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3873:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3873:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "3873:45:2"
                },
                {
                  "assignments": [
                    333
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 333,
                      "mutability": "mutable",
                      "name": "time",
                      "nodeType": "VariableDeclaration",
                      "scope": 406,
                      "src": "3932:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 332,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3932:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 342,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 334,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3944:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3944:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 336,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "3962:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 339,
                        "indexExpression": {
                          "expression": {
                            "id": 337,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3970:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3970:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3962:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 340,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "blockStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "3962:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3944:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3932:60:2"
                },
                {
                  "assignments": [
                    344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 344,
                      "mutability": "mutable",
                      "name": "numberOfReward",
                      "nodeType": "VariableDeclaration",
                      "scope": 406,
                      "src": "4003:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 343,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4003:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 351,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 345,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "4025:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 348,
                          "name": "timeInterest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "4037:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4032:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 346,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4032:4:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4032:18:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4025:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4003:47:2"
                },
                {
                  "assignments": [
                    353
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 353,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 406,
                      "src": "4061:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 352,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4061:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 362,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 356,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 117,
                            "src": "4079:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                              "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                            }
                          },
                          "id": 359,
                          "indexExpression": {
                            "expression": {
                              "id": 357,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4087:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4087:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4079:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$92_storage",
                            "typeString": "struct StakingEth.Staker storage ref"
                          }
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87,
                        "src": "4079:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4075:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int256_$",
                        "typeString": "type(int256)"
                      },
                      "typeName": {
                        "id": 354,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4075:3:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4075:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4061:46:2"
                },
                {
                  "assignments": [
                    364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 364,
                      "mutability": "mutable",
                      "name": "interest",
                      "nodeType": "VariableDeclaration",
                      "scope": 406,
                      "src": "4118:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 363,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4118:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 368,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 365,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "4133:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "33303030",
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4143:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3000_by_1",
                        "typeString": "int_const 3000"
                      },
                      "value": "3000"
                    },
                    "src": "4133:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4118:29:2"
                },
                {
                  "assignments": [
                    370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 370,
                      "mutability": "mutable",
                      "name": "reward",
                      "nodeType": "VariableDeclaration",
                      "scope": 406,
                      "src": "4158:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 369,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4158:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 377,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 371,
                      "name": "interest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "4171:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 374,
                          "name": "numberOfReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "4186:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4182:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "int",
                          "nodeType": "ElementaryTypeName",
                          "src": "4182:3:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4182:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "4171:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4158:43:2"
                },
                {
                  "assignments": [
                    379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 379,
                      "mutability": "mutable",
                      "name": "rewardMyToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 406,
                      "src": "4212:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 378,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "4212:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 383,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 380,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "4232:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4241:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "4232:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4212:33:2"
                },
                {
                  "expression": {
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 384,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "4258:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 387,
                        "indexExpression": {
                          "expression": {
                            "id": 385,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4266:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4266:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4258:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "myReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89,
                      "src": "4258:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 391,
                          "name": "rewardMyToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 379,
                          "src": "4294:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4289:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4289:4:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4289:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4258:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "4258:50:2"
                },
                {
                  "expression": {
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 395,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "4319:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 398,
                        "indexExpression": {
                          "expression": {
                            "id": 396,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4327:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4327:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4319:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardCalculed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "4319:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4356:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4319:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "4319:41:2"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 403,
                      "name": "rewardCalculed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "4378:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4378:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "EmitStatement",
                  "src": "4373:21:2"
                }
              ]
            },
            "documentation": {
              "id": 319,
              "nodeType": "StructuredDocumentation",
              "src": "3679:140:2",
              "text": "@notice Calculate the amount of the reward\n@dev Calculate the amount of the reward compared to the eth, converted into my token"
            },
            "functionSelector": "25b0098d",
            "id": 407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculedReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3850:2:2"
            },
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3860:0:2"
            },
            "scope": 508,
            "src": "3827:577:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 419,
              "nodeType": "Block",
              "src": "4514:60:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 413,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "4534:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                          "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                        }
                      },
                      "id": 416,
                      "indexExpression": {
                        "expression": {
                          "id": 414,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4542:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4542:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4534:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$92_storage",
                        "typeString": "struct StakingEth.Staker storage ref"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "myReward",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 89,
                    "src": "4534:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 412,
                  "id": 418,
                  "nodeType": "Return",
                  "src": "4527:35:2"
                }
              ]
            },
            "documentation": {
              "id": 408,
              "nodeType": "StructuredDocumentation",
              "src": "4414:45:2",
              "text": "@return Return the accumulated reward word"
            },
            "functionSelector": "34f2015d",
            "id": 420,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4486:2:2"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 411,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "4509:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4509:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4508:6:2"
            },
            "scope": 508,
            "src": "4467:107:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 493,
              "nodeType": "Block",
              "src": "4614:499:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 424,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "4635:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                                "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                              }
                            },
                            "id": 427,
                            "indexExpression": {
                              "expression": {
                                "id": 425,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4643:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4643:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4635:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$92_storage",
                              "typeString": "struct StakingEth.Staker storage ref"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "myReward",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89,
                          "src": "4635:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4667:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4635:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f7573206e276176657a20706173206465207265636f6d70656e736520706f7572206361205374616b652064657320746f6b656e",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4670:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ec2810fdba070204c3f67c52cf6c3ef167305facd7fb0eef150793ffb5e9ce5",
                          "typeString": "literal_string \"Vous n'avez pas de recompense pour ca Stake des token\""
                        },
                        "value": "Vous n'avez pas de recompense pour ca Stake des token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ec2810fdba070204c3f67c52cf6c3ef167305facd7fb0eef150793ffb5e9ce5",
                          "typeString": "literal_string \"Vous n'avez pas de recompense pour ca Stake des token\""
                        }
                      ],
                      "id": 423,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4627:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4627:99:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "4627:99:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 435,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "4745:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                                "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                              }
                            },
                            "id": 438,
                            "indexExpression": {
                              "expression": {
                                "id": 436,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4753:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4753:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4745:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$92_storage",
                              "typeString": "struct StakingEth.Staker storage ref"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isStaker",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83,
                          "src": "4745:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4777:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4745:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 434,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4737:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4737:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "4737:45:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 445,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "4801:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                                "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                              }
                            },
                            "id": 448,
                            "indexExpression": {
                              "expression": {
                                "id": 446,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4809:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4809:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4801:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$92_storage",
                              "typeString": "struct StakingEth.Staker storage ref"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardCalculed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85,
                          "src": "4801:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4839:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4801:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 444,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4793:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4793:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "4793:51:2"
                },
                {
                  "assignments": [
                    455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 455,
                      "mutability": "mutable",
                      "name": "reward",
                      "nodeType": "VariableDeclaration",
                      "scope": 493,
                      "src": "4855:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 454,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4855:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 461,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 456,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "4869:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                          "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                        }
                      },
                      "id": 459,
                      "indexExpression": {
                        "expression": {
                          "id": 457,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4877:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4877:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4869:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$92_storage",
                        "typeString": "struct StakingEth.Staker storage ref"
                      }
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "myReward",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 89,
                    "src": "4869:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4855:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 465,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4927:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4927:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 467,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "4939:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 462,
                        "name": "myToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "4910:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$737",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 686,
                      "src": "4910:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4910:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "4910:36:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 471,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4980:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4980:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 473,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "4992:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 470,
                      "name": "rewardWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "4965:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4965:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 475,
                  "nodeType": "EmitStatement",
                  "src": "4960:39:2"
                },
                {
                  "expression": {
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 476,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "5012:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 479,
                        "indexExpression": {
                          "expression": {
                            "id": 477,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5020:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5020:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5012:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 480,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "myReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89,
                      "src": "5012:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5043:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5012:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 483,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:32:2"
                },
                {
                  "expression": {
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 484,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 117,
                          "src": "5055:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                            "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                          }
                        },
                        "id": 487,
                        "indexExpression": {
                          "expression": {
                            "id": 485,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5063:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5063:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5055:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$92_storage",
                          "typeString": "struct StakingEth.Staker storage ref"
                        }
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blockStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "5055:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 489,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5088:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5088:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5055:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "5055:48:2"
                }
              ]
            },
            "functionSelector": "b88a802f",
            "id": 494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4604:2:2"
            },
            "returnParameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4614:0:2"
            },
            "scope": 508,
            "src": "4584:529:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 506,
              "nodeType": "Block",
              "src": "5196:66:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 501,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "5217:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$92_storage_$",
                          "typeString": "mapping(address => struct StakingEth.Staker storage ref)"
                        }
                      },
                      "id": 503,
                      "indexExpression": {
                        "id": 502,
                        "name": "appelant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 496,
                        "src": "5225:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5217:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$92_storage",
                        "typeString": "struct StakingEth.Staker storage ref"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 87,
                    "src": "5217:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 500,
                  "id": 505,
                  "nodeType": "Return",
                  "src": "5210:32:2"
                }
              ]
            },
            "functionSelector": "7c01f25c",
            "id": 507,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalanceStack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 496,
                  "mutability": "mutable",
                  "name": "appelant",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "5148:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5148:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5147:18:2"
            },
            "returnParameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 499,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 507,
                  "src": "5188:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5188:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5187:9:2"
            },
            "scope": 508,
            "src": "5123:139:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 509,
        "src": "324:4947:2"
      }
    ],
    "src": "0:5271:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {},
      "links": {},
      "address": "0x421bD2bC5e1322321BEee5f9Fdbc3E75b632f4E2",
      "transactionHash": "0x8b71e6782bdba0dec3b89cff1724c1affdbd544aa3d85c69dc05e2fad3e6fc3a"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2021-12-22T13:58:30.445Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Bloodyr",
    "kind": "dev",
    "methods": {
      "calculedReward()": {
        "details": "Calculate the amount of the reward compared to the eth, converted into my token"
      },
      "getLatestEthPrice()": {
        "details": "use the oracle chainlink to retrieve the value at time T of the eth"
      },
      "getLatestMyTokenPrice()": {
        "details": "use the oracle chainlink to retrieve the value at time T of the ethand set the value of my token with a ratio of / 1000",
        "returns": {
          "_0": "Price of my token "
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "viewReward()": {
        "returns": {
          "_0": "Return the accumulated reward word"
        }
      },
      "whithdraw(address)": {
        "details": "Require that the user structure be true, set an amount in relation to the balance,reassign the balance of the balance to 0,Return the eth to its owner, calculate the reward, send the reward, unify the user structure"
      }
    },
    "title": "Staking eth",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "calculedReward()": {
        "notice": "Calculate the amount of the reward"
      },
      "getLatestEthPrice()": {
        "notice": "return the value of my token"
      },
      "getLatestMyTokenPrice()": {
        "notice": "return the value of my token"
      },
      "whithdraw(address)": {
        "notice": "Withdraw Eth"
      }
    },
    "version": 1
  }
}